{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/./asc.js","webpack://asc/./shim/fs.js","webpack://asc/./shim/path.js","webpack://asc/./shim/process.js","webpack://asc/./util/colors.js","webpack://asc/./util/find.js","webpack://asc/./util/mkdirp.js","webpack://asc/./util/options.js","webpack://asc/./util/utf8.js","webpack://asc/../lib/loader/umd/index.js","webpack://asc/../lib/rtrace/umd/index.js","webpack://asc/external \"assemblyscript\"","webpack://asc/external \"binaryen\"","webpack://asc/webpack/bootstrap","webpack://asc/webpack/runtime/global","webpack://asc/webpack/startup"],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__911__","__WEBPACK_EXTERNAL_MODULE__525__","fs","path","process","utf8","colorsUtil","optionsUtil","mkdirp","find","binaryen","g","dynrequire","WIN","platform","EOL","SEP","setupExtension","ext","startsWith","ext_d","re","RegExp","re_d","re_except_d","re_index","defaultExtension","__wrap","ptrOrObj","wrapperClass","wrap","assemblyscript","__newString","__getString","__pin","__unpin","__collect","Object","defineProperty","get","ready","removeAllListeners","wasmArg","argv","findIndex","arg","binaryPath","splice","loader","rtrace","err","info","console","log","getMemory","memory","gcProfile","length","writeFileSync","timestamp","Date","now","JSON","stringify","join","instantiateSync","readFileSync","install","_start","loadAssemblyScriptWasm","register","project","skipIgnore","compilerOptions","target","e_ts","Error","stack","loadAssemblyScriptJS","str","ptr","incremental","loadAssemblyScript","isBundle","version","options","libraryPrefix","LIBRARY_PREFIX","valueOf","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","libDir","bundled","files","forEach","file","replace","definitionFiles","readDefinition","name","assembly","portable","compileString","sources","output","create","stdout","createMemoryStream","stderr","keys","key","val","opt","type","push","Array","isArray","String","main","concat","readFile","prototype","hasOwnProperty","call","writeFile","contents","listFiles","callback","bundleMinorVersion","bundleMajorVersion","bundlePatchVersion","versionParts","split","parseInt","readFileNode","writeFileNode","listFilesNode","stats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","initializeTime","initializeCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","transformTime","transformCount","extension","optionsResult","parse","opts","arguments","noColors","supported","from","unknownOpts","unknown","write","yellow","trailingArgv","trailing","code","red","test","baseDir","normalize","asconfigPath","resolvePath","config","asconfigFile","basename","asconfigDir","dirname","asconfig","getAsconfig","asconfigHasEntries","entries","help","out","color","white","cyan","seenAsconfig","Set","add","targets","targetOptions","merge","generalOptions","entry","extends","has","addDefaults","showConfig","unique","values","program","newOptions","setTarget","setNoAssert","noAssert","setExportMemory","noExportMemory","setImportMemory","importMemory","setInitialMemory","initialMemory","setMaximumMemory","maximumMemory","setSharedMemory","sharedMemory","setImportTable","importTable","setExportTable","exportTable","setExplicitStart","explicitStart","setMemoryBase","memoryBase","setTableBase","tableBase","setSourceMap","sourceMap","setNoUnsafe","noUnsafe","setPedantic","pedantic","setLowMemoryLimit","lowMemoryLimit","setExportRuntime","exportRuntime","setBundleVersion","stackSize","runtime","DEFAULT_STACK_SIZE","setStackSize","use","aliases","i","k","part","p","indexOf","alias","substring","trim","aliasPtr","namePtr","setGlobalAlias","features","disable","flag","toUpperCase","disableFeature","enable","enableFeature","optimizeLevel","shrinkLevel","optimize","Math","min","max","setOptimizeLevelHints","newProgram","transforms","transform","tsNodeRegistered","transformArgs","filename","endsWith","transpileOnly","skipProject","resolve","paths","cwd","map","classOrModule","assign","error","applyTransform","args","transfromTime","measure","libPath","textPtr","pathPtr","customLibDirs","lib","libFiles","j","l","libText","packageMains","Map","packageBases","getFile","internalPath","dependeePath","sourceText","sourcePath","plainName","indexName","match","packageName","isPackageRoot","undefined","filePath","basePath","traceResolution","parts","slice","currentPath","relative","mainPath","jsonPath","jsonText","json","ascMain","set","mainDir","parseBacklog","nextFile","getDependee","numErrors","checkDiagnostics","reportDiagnostic","message","runtimeName","runtimePath","runtimeText","isAbsolute","parser","s","normalizedPath","sort","initializeProgram","crash","compile","original","Module","wrapModule","ref","dispose","noValidate","isValid","validate","trapMode","runPass","debugInfo","debug","converge","runPasses","pass","last","emitBinary","next","noEmit","outFile","textFile","jsFile","binaryFile","hasStdout","hasOutput","tsdFile","idlFile","wasm","sourceMapURL","binary","writeStdout","sourceRoot","index","text","getSource","sourcesContent","wastFormat","emitText","emitStackIR","idl","buildIDL","tsd","buildTSD","js","emitAsmjs","printStats","dirPath","outputFilePath","existsSync","readdirSync","filter","used","toString","isObject","location","ex","include","diagnosticPtr","nextDiagnostic","formatDiagnostic","isTTY","diagnostic","DiagnosticMessage","range","Range","relatedRange","rangeSource","source","Source","relatedRangeSource","category","start","end","isError","createStats","fn","hrtime","times","formatTime","time","toFixed","format","count","len","pad","allocBuffer","Buffer","allocUnsafe","Uint8Array","stream","chunk","buffer","reset","toBuffer","offset","read","stage","BAR","exit","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","noLib","types","allowJs","assertPath","TypeError","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","posix","resolvedPath","resolvedAbsolute","trailingSeparator","joined","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","hasRoot","matchedSlash","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","base","_format","ret","delimiter","win32","umask","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","mozNow","msNow","oNow","webkitNow","getTime","proc","isCI","env","colors","gray","GRAY","RESET","RED","green","GREEN","YELLOW","blue","BLUE","magenta","MAGENTA","CYAN","WHITE","findFiles","statSync","isDirectory","iname","made","mode","mkdirSync","err0","stat","err1","sanitizeValue","value","Boolean","trunc","Number","v","propagateDefaults","option","default","exec","parseFloat","indent","padding","eol","sbCategories","sbOther","description","sb","noCategories","line","hasCategories","currentOptions","parentOptions","parentBaseDir","mergedOptions","mutuallyExclusive","isPath","useNodeResolution","cliOnly","currentValue","parentValue","exclude","includes","defaultValue","string","c","t","fromCharCode","apply","c1","c2","instantiate","instantiateStreaming","demangle","BIGINT","BigUint64Array","THIS","Symbol","decoder","TextDecoder","getStringImpl","Uint32Array","arr","Uint16Array","decode","preInstantiate","imports","extendedExports","getString","abort","msg","colm","trace","n","seed","F_NOEXPORTRUNTIME","postInstantiate","instance","table","__new","__rtti_base","getArrayInfo","id","U32","getInfo","getBase","getValueAlign","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","align","buf","subarray","getTypedArray","Type","getTypedArrayView","bufPtr","attachTypedArrayFunctions","ctor","bind","U16","__newArray","result","view","__getArray","input","__getArrayBuffer","Uint8ClampedArray","BYTES_PER_ELEMENT","__instanceof","baseId","isResponse","src","Response","isModule","WebAssembly","async","extended","Instance","arrayBuffer","setArgumentsLength","internalName","elem","curr","shift","hash","className","classElem","constructor","thisValue","writable","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","enumerable","_default","Rtrace","TOTAL_OVERHEAD","OBJECT_OVERHEAD","BLOCK_OVERHEAD","PTR_VIEW","assert","x","trimStacktrace","levels","stackTraceLimit","mmTagsToString","gcColorToString","onerror","oninfo","oncollect_","oncollect","shadow","shadowStart","blocks","allocSites","freedBlocks","gcProfileStart","allocCount","resizeCount","moveCount","freeCount","heapBase","oninit","onalloc","onresize","onmove","onvisit","onfree","oninterrupt","onyield","onstore","onload","diff","byteLength","grow","Memory","initial","PAGE_SIZE","oldSize","PTR_SIZE","size","errored","isLoad","isRT","syncShadow","mmInfo","gcInfo","gcInfo2","rtId","rtSize","tags","prev","allocStack","getBlockInfo","markShadow","beforeInfo","newSize","unmarkShadow","oldPtr","newPtr","oldInfo","newInfo","freeStack","allocInfo","delete","total","plot","pause","interruptStart","bytes","accessShadow","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","globalThis","Function","window"],"mappings":"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","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"binaryen\", \"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"binaryen\"], root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__911__, __WEBPACK_EXTERNAL_MODULE__525__) {\nreturn ","/**\n * @license\n * Copyright 2020 Daniel Wirtz / The AssemblyScript Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Compiler frontend for node.js\n *\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\n * directly through ts-node if distribution files are not present.\n *\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\n */\n\n/* global BUNDLE_VERSION, BUNDLE_LIBRARY, BUNDLE_DEFINITIONS */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst process = require(\"process\"); // ensure shim\nconst utf8 = require(\"./util/utf8\");\nconst colorsUtil = require(\"./util/colors\");\nconst optionsUtil = require(\"./util/options\");\nconst mkdirp = require(\"./util/mkdirp\");\nconst find = require(\"./util/find\");\nconst binaryen = global.binaryen || (global.binaryen = require(\"binaryen\"));\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\nconst WIN = process.platform === \"win32\";\nconst EOL = WIN ? \"\\r\\n\" : \"\\n\";\nconst SEP = WIN ? \"\\\\\" : \"/\";\n\n// Sets up an extension with its definition counterpart and relevant regexes.\nfunction setupExtension(ext) {\n  if (!ext.startsWith(\".\")) ext = \".\" + ext;\n  return {\n    ext,\n    ext_d: \".d\" + ext,\n    re: new RegExp(\"\\\\\" + ext + \"$\"),\n    re_d: new RegExp(\"\\\\.d\\\\\" + ext + \"$\"),\n    re_except_d: new RegExp(\"^(?!.*\\\\.d\\\\\" + ext + \"$).*\\\\\" + ext + \"$\"),\n    re_index: new RegExp(\"(?:^|[\\\\\\\\\\\\/])index\\\\\" + ext + \"$\")\n  };\n}\n\nconst defaultExtension = setupExtension(\".ts\");\n\n// Proxy Binaryen's ready event\nObject.defineProperty(exports, \"ready\", {\n  get() { return binaryen.ready; }\n});\n\n// Emscripten adds an `uncaughtException` listener to Binaryen that results in an additional\n// useless code fragment on top of an actual error. suppress this:\nif (process.removeAllListeners) process.removeAllListeners(\"uncaughtException\");\n\n// Use distribution files if present, otherwise run the sources directly.\nfunction loadAssemblyScriptJS() {\n  var exports;\n  try {\n    // note that this case will always trigger in recent node.js versions for typical installs\n    // see: https://nodejs.org/api/packages.html#packages_self_referencing_a_package_using_its_name\n    exports = require(\"assemblyscript\");\n  } catch (e) {\n    try { // `asc` on the command line (unnecessary in recent node)\n      exports = dynrequire(\"../dist/assemblyscript.js\");\n    } catch (e) {\n      try { // `asc` on the command line without dist files (unnecessary in recent node)\n        dynrequire(\"ts-node\").register({\n          project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\"),\n          skipIgnore: true,\n          compilerOptions: { target: \"ES2016\" }\n        });\n        dynrequire(\"../src/glue/js\");\n        exports = dynrequire(\"../src\");\n      } catch (e_ts) {\n        try { // `require(\"dist/asc.js\")` in explicit browser tests\n          exports = dynrequire(\"./assemblyscript\");\n        } catch (e) {\n          throw Error(e_ts.stack + \"\\n---\\n\" + e.stack);\n        }\n      }\n    }\n  }\n  return exports;\n}\n\n// Loads the specified bootstrapped Wasm binary of the compiler.\nfunction loadAssemblyScriptWasm(binaryPath) {\n  const loader = require(\"../lib/loader/umd/index\");\n  const rtrace = new (require(\"../lib/rtrace/umd/index\").Rtrace)({\n    onerror(err, info) { console.log(err, info); },\n    getMemory() { return exports.memory; },\n    oncollect() {\n      var gcProfile = rtrace.gcProfile;\n      if (gcProfile && gcProfile.length && fs.writeFileSync) {\n        let timestamp = Date.now();\n        fs.writeFileSync(`rtrace-gc-profile-${timestamp}.json`, JSON.stringify(gcProfile));\n        fs.writeFileSync(`rtrace-gc-profile-${timestamp}.csv`, `time,memory,pause\\n${gcProfile.join(\"\\n\")}`);\n      }\n    }\n  });\n  var { exports } = loader.instantiateSync(fs.readFileSync(binaryPath), rtrace.install({ binaryen }));\n  if (exports._start) exports._start();\n  return exports;\n}\n\n/** Ensures that an object is a wrapper class instead of just a pointer. */\nfunction __wrap(ptrOrObj, wrapperClass) {\n  if (typeof ptrOrObj === \"number\") {\n    return ptrOrObj === 0 ? null : wrapperClass.wrap(ptrOrObj);\n  }\n  return ptrOrObj;\n}\n\nvar assemblyscript, __newString, __getString, __pin, __unpin, __collect;\n\nfunction loadAssemblyScript() {\n  const wasmArg = process.argv.findIndex(arg => arg == \"--wasm\");\n  if (~wasmArg) {\n    let binaryPath = process.argv[wasmArg + 1];\n    process.argv.splice(wasmArg, 2);\n    assemblyscript = loadAssemblyScriptWasm(binaryPath);\n    __newString = assemblyscript.__newString;\n    __getString = assemblyscript.__getString;\n    __pin = assemblyscript.__pin;\n    __unpin = assemblyscript.__unpin;\n    __collect = assemblyscript.__collect;\n  } else {\n    assemblyscript = loadAssemblyScriptJS();\n    __newString = str => str;\n    __getString = ptr => ptr;\n    __pin = ptr => ptr;\n    __unpin = ptr => undefined;\n    __collect = incremental => undefined;\n  }\n}\nloadAssemblyScript();\n\n/** Whether this is a webpack bundle or not. */\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\n\n/** AssemblyScript version. */\nexports.version = exports.isBundle ? BUNDLE_VERSION : dynrequire(\"../package.json\").version;\n\n/** Available CLI options. */\nexports.options = require(\"./asc.json\");\n\n/** Prefix used for library files. */\nexports.libraryPrefix = __getString(assemblyscript.LIBRARY_PREFIX.valueOf());\n\n/** Default Binaryen optimization level. */\nexports.defaultOptimizeLevel = 3;\n\n/** Default Binaryen shrink level. */\nexports.defaultShrinkLevel = 1;\n\n/** Bundled library files. */\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\n  const bundled = {};\n  find\n    .files(libDir, defaultExtension.re_except_d)\n    .forEach(file => {\n      bundled[file.replace(defaultExtension.re, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\");\n    });\n  return bundled;\n})();\n\n/** Bundled definition files. */\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\n  const readDefinition = name => fs.readFileSync(\n    path.join(__dirname, \"..\", \"std\", name, \"index\" + defaultExtension.ext_d),\n    \"utf8\"\n  );\n  return {\n    assembly: readDefinition(\"assembly\"),\n    portable: readDefinition(\"portable\")\n  };\n})();\n\n/** Convenience function that parses and compiles source strings directly. */\nexports.compileString = (sources, options) => {\n  if (typeof sources === \"string\") sources = { [\"input\" + defaultExtension.ext]: sources };\n  const output = Object.create({\n    stdout: createMemoryStream(),\n    stderr: createMemoryStream()\n  });\n  var argv = [\n    \"--binaryFile\", \"binary\",\n    \"--textFile\", \"text\",\n  ];\n  Object.keys(options || {}).forEach(key => {\n    var val = options[key];\n    var opt = exports.options[key];\n    if (opt && opt.type === \"b\") {\n      if (val) argv.push(\"--\" + key);\n    } else {\n      if (Array.isArray(val)) {\n        val.forEach(val => { argv.push(\"--\" + key, String(val)); });\n      }\n      else argv.push(\"--\" + key, String(val));\n    }\n  });\n  exports.main(argv.concat(Object.keys(sources)), {\n    stdout: output.stdout,\n    stderr: output.stderr,\n    readFile: name => Object.prototype.hasOwnProperty.call(sources, name) ? sources[name] : null,\n    writeFile: (name, contents) => { output[name] = contents; },\n    listFiles: () => []\n  });\n  return output;\n};\n\n/** Runs the command line utility using the specified arguments array. */\nexports.main = function main(argv, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n\n  // Bundle semantic version\n  let bundleMinorVersion = 0, bundleMajorVersion = 0, bundlePatchVersion = 0;\n  const versionParts = (exports.version || \"\").split(\".\");\n  if (versionParts.length === 3) {\n    bundleMajorVersion = parseInt(versionParts[0]) | 0;\n    bundleMinorVersion = parseInt(versionParts[1]) | 0;\n    bundlePatchVersion = parseInt(versionParts[2]) | 0;\n  }\n\n  const stdout = options.stdout || process.stdout;\n  const stderr = options.stderr || process.stderr;\n  const readFile = options.readFile || readFileNode;\n  const writeFile = options.writeFile || writeFileNode;\n  const listFiles = options.listFiles || listFilesNode;\n  const stats = options.stats || createStats();\n  let extension = defaultExtension;\n\n  // Output must be specified if not present in the environment\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\n\n  // Parse command line options but do not populate option defaults yet\n  const optionsResult = optionsUtil.parse(argv, exports.options, false);\n  let opts = optionsResult.options;\n  argv = optionsResult.arguments;\n\n  if (opts.noColors) {\n    colorsUtil.stdout.supported =\n    colorsUtil.stderr.supported = false;\n  } else {\n    colorsUtil.stdout = colorsUtil.from(stdout);\n    colorsUtil.stderr = colorsUtil.from(stderr);\n  }\n\n  // Check for unknown options\n  const unknownOpts = optionsResult.unknown;\n  if (unknownOpts.length) {\n    unknownOpts.forEach(arg => {\n      stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unknown option '\" + arg + \"'\" + EOL);\n    });\n  }\n\n  // Check for trailing arguments\n  const trailingArgv = optionsResult.trailing;\n  if (trailingArgv.length) {\n    stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unsupported trailing arguments: \" + trailingArgv.join(\" \") + EOL);\n  }\n\n  // Use default callback if none is provided\n  if (!callback) callback = function defaultCallback(err) {\n    var code = 0;\n    if (err) {\n      stderr.write(colorsUtil.stderr.red(\"FAILURE \") + err.stack.replace(/^ERROR: /i, \"\") + EOL);\n      code = 1;\n    }\n    return code;\n  };\n\n  // Just print the version if requested\n  if (opts.version) {\n    stdout.write(\"Version \" + exports.version + EOL);\n    return callback(null);\n  }\n\n  // Use another extension if requested\n  if (typeof opts.extension === \"string\") {\n    if (/^\\.?[0-9a-zA-Z]{1,14}$/.test(opts.extension)) {\n      extension = setupExtension(opts.extension);\n    } else {\n      return callback(Error(\"Invalid extension: \" + opts.extension));\n    }\n  }\n\n  // Set up base directory\n  const baseDir = path.normalize(opts.baseDir || \".\");\n\n  // Check if a config file is present\n  let asconfigPath = optionsUtil.resolvePath(opts.config || \"asconfig.json\", baseDir);\n  let asconfigFile = path.basename(asconfigPath);\n  let asconfigDir = path.dirname(asconfigPath);\n  let asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n  let asconfigHasEntries = asconfig != null && Array.isArray(asconfig.entries) && asconfig.entries.length;\n\n  // Print the help message if requested or no source files are provided\n  if (opts.help || (!argv.length && !asconfigHasEntries)) {\n    var out = opts.help ? stdout : stderr;\n    var color = opts.help ? colorsUtil.stdout : colorsUtil.stderr;\n    out.write([\n      color.white(\"SYNTAX\"),\n      \"  \" + color.cyan(\"asc\") + \" [entryFile ...] [options]\",\n      \"\",\n      color.white(\"EXAMPLES\"),\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext,\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext + \" -b hello.wasm -t hello.wat\",\n      \"  \" + color.cyan(\"asc\") + \" hello1\" + extension.ext + \" hello2\" + extension.ext + \" -b -O > hello.wasm\",\n      \"  \" + color.cyan(\"asc\") + \" --config asconfig.json --target release\",\n      \"\",\n      color.white(\"OPTIONS\"),\n    ].concat(\n      optionsUtil.help(exports.options, 24, EOL)\n    ).join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // I/O must be specified if not present in the environment\n  if (!fs.readFileSync) {\n    if (readFile === readFileNode) throw Error(\"'options.readFile' must be specified\");\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\n  }\n\n  // Load additional options from asconfig.json\n  const seenAsconfig = new Set();\n  seenAsconfig.add(asconfigPath);\n  const target = opts.target || \"release\";\n  while (asconfig) {\n    // Merge target first\n    if (asconfig.targets) {\n      const targetOptions = asconfig.targets[target];\n      if (targetOptions) {\n        opts = optionsUtil.merge(exports.options, opts, targetOptions, asconfigDir);\n      }\n    }\n    // Merge general options\n    const generalOptions = asconfig.options;\n    if (generalOptions) {\n      opts = optionsUtil.merge(exports.options, opts, generalOptions, asconfigDir);\n    }\n\n    // Append entries\n    if (asconfig.entries) {\n      for (let entry of asconfig.entries) {\n        argv.push(optionsUtil.resolvePath(entry, asconfigDir));\n      }\n    }\n\n    // Look up extended asconfig and repeat\n    if (asconfig.extends) {\n      asconfigPath = optionsUtil.resolvePath(asconfig.extends, asconfigDir, true);\n      asconfigFile = path.basename(asconfigPath);\n      asconfigDir = path.dirname(asconfigPath);\n      if (seenAsconfig.has(asconfigPath)) break;\n      seenAsconfig.add(asconfigPath);\n      asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n    } else {\n      break;\n    }\n  }\n\n  // Populate option defaults once user-defined options are set\n  optionsUtil.addDefaults(exports.options, opts);\n\n  // If showConfig print options and exit\n  if (opts.showConfig) {\n    stderr.write(JSON.stringify({\n      options: opts,\n      entries: argv\n    }, null, 2));\n    return callback(null);\n  }\n\n  // create a unique set of values\n  function unique(values) {\n    return [...new Set(values)];\n  }\n\n  // Set up options\n  var program;\n  const compilerOptions = __pin(assemblyscript.newOptions());\n  assemblyscript.setTarget(compilerOptions, 0);\n  assemblyscript.setNoAssert(compilerOptions, opts.noAssert);\n  assemblyscript.setExportMemory(compilerOptions, !opts.noExportMemory);\n  assemblyscript.setImportMemory(compilerOptions, opts.importMemory);\n  assemblyscript.setInitialMemory(compilerOptions, opts.initialMemory >>> 0);\n  assemblyscript.setMaximumMemory(compilerOptions, opts.maximumMemory >>> 0);\n  assemblyscript.setSharedMemory(compilerOptions, opts.sharedMemory);\n  assemblyscript.setImportTable(compilerOptions, opts.importTable);\n  assemblyscript.setExportTable(compilerOptions, opts.exportTable);\n  assemblyscript.setExplicitStart(compilerOptions, opts.explicitStart);\n  assemblyscript.setMemoryBase(compilerOptions, opts.memoryBase >>> 0);\n  assemblyscript.setTableBase(compilerOptions, opts.tableBase >>> 0);\n  assemblyscript.setSourceMap(compilerOptions, opts.sourceMap != null);\n  assemblyscript.setNoUnsafe(compilerOptions, opts.noUnsafe);\n  assemblyscript.setPedantic(compilerOptions, opts.pedantic);\n  assemblyscript.setLowMemoryLimit(compilerOptions, opts.lowMemoryLimit >>> 0);\n  assemblyscript.setExportRuntime(compilerOptions, opts.exportRuntime);\n  assemblyscript.setBundleVersion(compilerOptions, bundleMajorVersion, bundleMinorVersion, bundlePatchVersion);\n  if (!opts.stackSize && opts.runtime == \"incremental\") {\n    opts.stackSize = assemblyscript.DEFAULT_STACK_SIZE;\n  }\n  assemblyscript.setStackSize(compilerOptions, opts.stackSize);\n\n  // Instrument callback to perform GC\n  callback = (function(callback) {\n    return function wrappedCallback(err) {\n      __unpin(compilerOptions);\n      if (program) __unpin(program);\n      __collect();\n      return callback(err);\n    };\n  })(callback);\n\n  // Add or override aliases if specified\n  if (opts.use) {\n    let aliases = opts.use;\n    for (let i = 0, k = aliases.length; i < k; ++i) {\n      let part = aliases[i];\n      let p = part.indexOf(\"=\");\n      if (p < 0) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      let alias = part.substring(0, p).trim();\n      let name = part.substring(p + 1).trim();\n      if (!alias.length) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      {\n        let aliasPtr = __pin(__newString(alias));\n        let namePtr = __newString(name);\n        assemblyscript.setGlobalAlias(compilerOptions, aliasPtr, namePtr);\n        __unpin(aliasPtr);\n      }\n    }\n  }\n\n  // Disable default features if specified\n  var features;\n  if ((features = opts.disable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.disableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Enable experimental features if specified\n  if ((features = opts.enable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.enableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Set up optimization levels\n  var optimizeLevel = 0;\n  var shrinkLevel = 0;\n  if (opts.optimize) {\n    optimizeLevel = exports.defaultOptimizeLevel;\n    shrinkLevel = exports.defaultShrinkLevel;\n  }\n  if (typeof opts.optimizeLevel === \"number\") optimizeLevel = opts.optimizeLevel;\n  if (typeof opts.shrinkLevel === \"number\") shrinkLevel = opts.shrinkLevel;\n  optimizeLevel = Math.min(Math.max(optimizeLevel, 0), 3);\n  shrinkLevel = Math.min(Math.max(shrinkLevel, 0), 2);\n  assemblyscript.setOptimizeLevelHints(compilerOptions, optimizeLevel, shrinkLevel);\n\n  // Initialize the program\n  program = __pin(assemblyscript.newProgram(compilerOptions));\n\n  // Collect transforms *constructors* from the `--transform` CLI flag as well\n  // as the `transform` option into the `transforms` array.\n  let transforms = [];\n  // `transform` option from `main()`\n  if (Array.isArray(options.transforms)) {\n    transforms.push(...options.transforms);\n  }\n  // `--transform` CLI flag\n  if (opts.transform) {\n    let tsNodeRegistered = false;\n    let transformArgs = unique(opts.transform);\n    for (let i = 0, k = transformArgs.length; i < k; ++i) {\n      let filename = transformArgs[i].trim();\n      if (!tsNodeRegistered && filename.endsWith(\".ts\")) { // ts-node requires .ts specifically\n        dynrequire(\"ts-node\").register({ transpileOnly: true, skipProject: true, compilerOptions: { target: \"ES2016\" } });\n        tsNodeRegistered = true;\n      }\n      try {\n        transforms.push(dynrequire(dynrequire.resolve(filename, { paths: [baseDir, process.cwd()] })));\n      } catch (e) {\n        return callback(e);\n      }\n    }\n  }\n\n  // Fix up the prototype of the transforms’ constructors and instantiate them.\n  try {\n    transforms = transforms.map(classOrModule => {\n      // Except if it’s a legacy module, just pass it through.\n      if (typeof classOrModule !== \"function\") {\n        return classOrModule; \n      }\n      Object.assign(classOrModule.prototype, {\n        program,\n        baseDir,\n        stdout,\n        stderr,\n        log: console.error,\n        readFile,\n        writeFile,\n        listFiles\n      });\n      return new classOrModule();\n    });\n  } catch (e) {\n    return callback(e);\n  }\n\n  function applyTransform(name, ...args) {\n    for (let i = 0, k = transforms.length; i < k; ++i) {\n      let transform = transforms[i];\n      if (typeof transform[name] === \"function\") {\n        try {\n          stats.transformCount++;\n          stats.transfromTime += measure(() => {\n            transform[name](...args);\n          });\n        } catch (e) {\n          return e;\n        }\n      }\n    }\n  }\n\n  // Parse library files\n  Object.keys(exports.libraryFiles).forEach(libPath => {\n    if (libPath.indexOf(\"/\") >= 0) return; // in sub-directory: imported on demand\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(exports.libraryFiles[libPath]));\n      let pathPtr = __newString(exports.libraryPrefix + libPath + extension.ext);\n      assemblyscript.parse(program, textPtr, pathPtr, false);\n      __unpin(textPtr);\n    });\n  });\n  let customLibDirs = [];\n  if (opts.lib) {\n    let lib = opts.lib;\n    if (typeof lib === \"string\") lib = lib.split(\",\");\n    customLibDirs.push(...lib.map(p => p.trim()));\n    customLibDirs = unique(customLibDirs); // `lib` and `customLibDirs` may include duplicates\n    for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\n      let libDir = customLibDirs[i];\n      let libFiles;\n      if (libDir.endsWith(extension.ext)) {\n        libFiles = [ path.basename(libDir) ];\n        libDir = path.dirname(libDir);\n      } else {\n        libFiles = listFiles(libDir, baseDir) || [];\n      }\n      for (let j = 0, l = libFiles.length; j < l; ++j) {\n        let libPath = libFiles[j];\n        let libText = readFile(libPath, libDir);\n        if (libText === null) return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\n        stats.parseCount++;\n        exports.libraryFiles[libPath.replace(extension.re, \"\")] = libText;\n        stats.parseTime += measure(() => {\n          let textPtr = __pin(__newString(libText));\n          let pathPtr = __newString(exports.libraryPrefix + libPath);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n          __unpin(textPtr);\n        });\n      }\n    }\n  }\n  opts.path = opts.path || [];\n\n  // Maps package names to parent directory\n  var packageMains = new Map();\n  var packageBases = new Map();\n\n  // Gets the file matching the specified source path, imported at the given dependee path\n  function getFile(internalPath, dependeePath) {\n    var sourceText = null; // text reported back to the compiler\n    var sourcePath = null; // path reported back to the compiler\n\n    const libraryPrefix = exports.libraryPrefix;\n    const libraryFiles = exports.libraryFiles;\n\n    // Try file.ext, file/index.ext, file.d.ext\n    if (!internalPath.startsWith(libraryPrefix)) {\n      if ((sourceText = readFile(sourcePath = internalPath + extension.ext, baseDir)) == null) {\n        if ((sourceText = readFile(sourcePath = internalPath + \"/index\" + extension.ext, baseDir)) == null) {\n          // portable d.ext: uses the .js file next to it in JS or becomes an import in Wasm\n          sourcePath = internalPath + extension.ext;\n          sourceText = readFile(internalPath + extension.ext_d, baseDir);\n        }\n      }\n\n    // Search library in this order: stdlib, custom lib dirs, paths\n    } else {\n      const plainName = internalPath.substring(libraryPrefix.length);\n      const indexName = plainName + \"/index\";\n      if (Object.prototype.hasOwnProperty.call(libraryFiles, plainName)) {\n        sourceText = libraryFiles[plainName];\n        sourcePath = libraryPrefix + plainName + extension.ext;\n      } else if (Object.prototype.hasOwnProperty.call(libraryFiles, indexName)) {\n        sourceText = libraryFiles[indexName];\n        sourcePath = libraryPrefix + indexName + extension.ext;\n      } else { // custom lib dirs\n        for (const libDir of customLibDirs) {\n          if ((sourceText = readFile(plainName + extension.ext, libDir)) != null) {\n            sourcePath = libraryPrefix + plainName + extension.ext;\n            break;\n          } else {\n            if ((sourceText = readFile(indexName + extension.ext, libDir)) != null) {\n              sourcePath = libraryPrefix + indexName + extension.ext;\n              break;\n            }\n          }\n        }\n        if (sourceText == null) { // paths\n          const match = internalPath.match(/^~lib\\/((?:@[^/]+\\/)?[^/]+)(?:\\/(.+))?/); // ~lib/(pkg)/(path), ~lib/(@org/pkg)/(path)\n          if (match) {\n            const packageName = match[1];\n            const isPackageRoot = match[2] === undefined;\n            const filePath = isPackageRoot ? \"index\" : match[2];\n            const basePath = packageBases.has(dependeePath) ? packageBases.get(dependeePath) : \".\";\n            if (opts.traceResolution) stderr.write(\"Looking for package '\" + packageName + \"' file '\" + filePath + \"' relative to '\" + basePath + \"'\" + EOL);\n            const paths = [];\n            const parts = path.resolve(baseDir, basePath).split(SEP);\n            for (let i = parts.length, k = WIN ? 1 : 0; i >= k; --i) {\n              if (parts[i - 1] !== \"node_modules\") paths.push(parts.slice(0, i).join(SEP) + SEP + \"node_modules\");\n            }\n            for (const currentPath of paths.concat(...opts.path).map(p => path.relative(baseDir, p))) {\n              if (opts.traceResolution) stderr.write(\"  in \" + path.join(currentPath, packageName) + EOL);\n              let mainPath = \"assembly\";\n              if (packageMains.has(packageName)) { // use cached\n                mainPath = packageMains.get(packageName);\n              } else { // evaluate package.json\n                let jsonPath = path.join(currentPath, packageName, \"package.json\");\n                let jsonText = readFile(jsonPath, baseDir);\n                if (jsonText != null) {\n                  try {\n                    let json = JSON.parse(jsonText);\n                    if (typeof json.ascMain === \"string\") {\n                      mainPath = json.ascMain.replace(extension.re_index, \"\");\n                      packageMains.set(packageName, mainPath);\n                    }\n                  } catch (e) { /* nop */ }\n                }\n              }\n              const mainDir = path.join(currentPath, packageName, mainPath);\n              const plainName = filePath;\n              if ((sourceText = readFile(path.join(mainDir, plainName + extension.ext), baseDir)) != null) {\n                sourcePath = libraryPrefix + packageName + \"/\" + plainName + extension.ext;\n                packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, plainName + extension.ext) + EOL);\n                break;\n              } else if (!isPackageRoot) {\n                const indexName = filePath + \"/index\";\n                if ((sourceText = readFile(path.join(mainDir, indexName + extension.ext), baseDir)) !== null) {\n                  sourcePath = libraryPrefix + packageName + \"/\" + indexName + extension.ext;\n                  packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                  if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, indexName + extension.ext) + EOL);\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // No such file\n    if (sourceText == null) return null;\n    return { sourceText, sourcePath };\n  }\n\n  // Parses the backlog of imported files after including entry files\n  function parseBacklog() {\n    var internalPath;\n    while ((internalPath = __getString(assemblyscript.nextFile(program)))) {\n      let file = getFile(internalPath, assemblyscript.getDependee(program, internalPath));\n      if (file) {\n        stats.parseCount++;\n        stats.parseTime += measure(() => {\n          let textPtr = __pin(__newString(file.sourceText));\n          let pathPtr = __newString(file.sourcePath);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n          __unpin(textPtr);\n        });\n      } else {\n        stats.parseTime += measure(() => {\n          let textPtr = __newString(null); // no need to pin\n          let pathPtr = __newString(internalPath + extension.ext);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n        });\n      }\n    }\n    var numErrors = checkDiagnostics(program, stderr, options.reportDiagnostic);\n    if (numErrors) {\n      const err = Error(numErrors + \" parse error(s)\");\n      err.stack = err.message; // omit stack\n      return callback(err);\n    }\n  }\n\n  // Include runtime before entry files so its setup runs first\n  {\n    let runtimeName = String(opts.runtime);\n    let runtimePath = \"rt/index-\" + runtimeName;\n    let runtimeText = exports.libraryFiles[runtimePath];\n    if (runtimeText == null) {\n      runtimePath = runtimeName;\n      runtimeText = readFile(runtimePath + extension.ext, baseDir);\n      if (runtimeText == null) return callback(Error(`Runtime '${runtimeName}' not found.`));\n    } else {\n      runtimePath = \"~lib/\" + runtimePath;\n    }\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(runtimeText));\n      let pathPtr = __newString(runtimePath + extension.ext);\n      assemblyscript.parse(program, textPtr, pathPtr, true);\n      __unpin(textPtr);\n    });\n  }\n\n  // Include entry files\n  for (let i = 0, k = argv.length; i < k; ++i) {\n    const filename = argv[i];\n\n    let sourcePath = String(filename).replace(/\\\\/g, \"/\").replace(extension.re, \"\").replace(/[\\\\/]$/, \"\");\n\n    // Setting the path to relative path\n    sourcePath = path.isAbsolute(sourcePath) ? path.relative(baseDir, sourcePath).replace(/\\\\/g, \"/\") : sourcePath;\n\n    // Try entryPath.ext, then entryPath/index.ext\n    let sourceText = readFile(sourcePath + extension.ext, baseDir);\n    if (sourceText == null) {\n      sourceText = readFile(sourcePath + \"/index\" + extension.ext, baseDir);\n      if (sourceText != null) sourcePath += \"/index\" + extension.ext;\n      else sourcePath += extension.ext;\n    } else {\n      sourcePath += extension.ext;\n    }\n\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(sourceText));\n      let pathPtr = __newString(sourcePath);\n      assemblyscript.parse(program, textPtr, pathPtr, true);\n      __unpin(textPtr);\n    });\n  }\n\n  // Parse entry files\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Call afterParse transform hook\n  {\n    let error = applyTransform(\"afterParse\", program.parser);\n    if (error) return callback(error);\n  }\n\n  // Parse additional files, if any\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Print files and exit if listFiles\n  if (opts.listFiles) {\n    // FIXME: not a proper C-like API\n    stderr.write(program.sources.map(s => s.normalizedPath).sort().join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // Pre-emptively initialize the program\n  stats.initializeCount++;\n  stats.initializeTime += measure(() => {\n    try {\n      assemblyscript.initializeProgram(program);\n    } catch (e) {\n      crash(\"initialize\", e);\n    }\n  });\n\n  // Call afterInitialize transform hook\n  {\n    let error = applyTransform(\"afterInitialize\", program);\n    if (error) return callback(error);\n  }\n\n  var module;\n  stats.compileCount++;\n  stats.compileTime += measure(() => {\n    try {\n      module = assemblyscript.compile(program);\n    } catch (e) {\n      crash(\"compile\", e);\n    }\n    // From here on we are going to use Binaryen.js, except that we keep pass\n    // order as defined in the compiler.\n    if (typeof module === \"number\") { // Wasm\n      const original = assemblyscript.Module.wrap(module);\n      module = binaryen.wrapModule(original.ref);\n      module.optimize = function(...args) {\n        original.optimize(...args);\n      };\n    } else { // JS\n      const original = module;\n      module = binaryen.wrapModule(module.ref);\n      module.optimize = function(...args) {\n        original.optimize(...args);\n      };\n    }\n  });\n  var numErrors = checkDiagnostics(program, stderr, options.reportDiagnostic);\n  if (numErrors) {\n    if (module) module.dispose();\n    const err = Error(numErrors + \" compile error(s)\");\n    err.stack = err.message; // omit stack\n    return callback(err);\n  }\n\n  // Call afterCompile transform hook\n  {\n    let error = applyTransform(\"afterCompile\", module);\n    if (error) return callback(error);\n  }\n\n  // Validate the module if requested\n  if (!opts.noValidate) {\n    stats.validateCount++;\n    let isValid;\n    stats.validateTime += measure(() => {\n      isValid = module.validate();\n    });\n    if (!isValid) {\n      module.dispose();\n      return callback(Error(\"validate error\"));\n    }\n  }\n\n  // Set Binaryen-specific options\n  if (opts.trapMode === \"clamp\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-clamp\");\n    });\n  } else if (opts.trapMode === \"js\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-js\");\n    });\n  } else if (opts.trapMode !== \"allow\") {\n    module.dispose();\n    return callback(Error(\"Unsupported trap mode\"));\n  }\n\n  // Optimize the module\n  const debugInfo = opts.debug;\n  const converge = opts.converge;\n  const runPasses = [];\n  if (opts.runPasses) {\n    if (typeof opts.runPasses === \"string\") {\n      opts.runPasses = opts.runPasses.split(\",\");\n    }\n    if (opts.runPasses.length) {\n      opts.runPasses.forEach(pass => {\n        if (runPasses.indexOf(pass = pass.trim()) < 0) {\n          runPasses.push(pass);\n        }\n      });\n    }\n  }\n\n  stats.optimizeTime += measure(() => {\n    stats.optimizeCount++;\n    try {\n      module.optimize(optimizeLevel, shrinkLevel, debugInfo);\n    } catch (e) {\n      crash(\"optimize\", e);\n    }\n    try {\n      module.runPasses(runPasses);\n    } catch (e) {\n      crash(\"runPasses\", e);\n    }\n    if (converge) {\n      let last;\n      try {\n        last = module.emitBinary();\n      } catch (e) {\n        crash(\"emitBinary (converge)\", e);\n      }\n      do {\n        stats.optimizeCount++;\n        try {\n          module.optimize(optimizeLevel, shrinkLevel, debugInfo);\n        } catch (e) {\n          crash(\"optimize (converge)\", e);\n        }\n        try {\n          module.runPasses(runPasses);\n        } catch (e) {\n          crash(\"runPasses (converge)\", e);\n        }\n        let next;\n        try {\n          next = module.emitBinary();\n        } catch (e) {\n          crash(\"emitBinary (converge)\", e);\n        }\n        if (next.length >= last.length) {\n          if (next.length > last.length) {\n            stderr.write(\"Last converge was suboptimial.\" + EOL);\n          }\n          break;\n        }\n        last = next;\n      } while (true);\n    }\n  });\n\n  // Prepare output\n  if (!opts.noEmit) {\n    if (opts.outFile != null) {\n      if (/\\.was?t$/.test(opts.outFile) && opts.textFile == null) {\n        opts.textFile = opts.outFile;\n      } else if (/\\.js$/.test(opts.outFile) && opts.jsFile == null) {\n        opts.jsFile = opts.outFile;\n      } else if (opts.binaryFile == null) {\n        opts.binaryFile = opts.outFile;\n      }\n    }\n\n    let hasStdout = false;\n    let hasOutput = opts.textFile != null\n                 || opts.binaryFile != null\n                 || opts.jsFile != null\n                 || opts.tsdFile != null\n                 || opts.idlFile != null;\n\n    // Write binary\n    if (opts.binaryFile != null) {\n      let basename = path.basename(opts.binaryFile);\n      let sourceMapURL = opts.sourceMap != null\n        ? opts.sourceMap.length\n          ? opts.sourceMap\n          : \"./\" + basename + \".map\"\n        : null;\n\n      let wasm;\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        try {\n          wasm = module.emitBinary(sourceMapURL);\n        } catch (e) {\n          crash(\"emitBinary\", e);\n        }\n      });\n\n      if (opts.binaryFile.length) {\n        writeFile(opts.binaryFile, wasm.binary, baseDir);\n      } else {\n        writeStdout(wasm.binary);\n        hasStdout = true;\n      }\n\n      // Post-process source map\n      if (wasm.sourceMap != \"\") {\n        if (opts.binaryFile.length) {\n          let map = JSON.parse(wasm.sourceMap);\n          map.sourceRoot = \"./\" + basename;\n          let contents = [];\n          map.sources.forEach((name, index) => {\n            let text = assemblyscript.getSource(program, __newString(name.replace(extension.re, \"\")));\n            if (text == null) return callback(Error(\"Source of file '\" + name + \"' not found.\"));\n            contents[index] = text;\n          });\n          map.sourcesContent = contents;\n          writeFile(path.join(\n            path.dirname(opts.binaryFile),\n            path.basename(sourceMapURL)\n          ).replace(/^\\.\\//, \"\"), JSON.stringify(map), baseDir);\n        } else {\n          stderr.write(\"Skipped source map (stdout already occupied)\" + EOL);\n        }\n      }\n    }\n\n    // Write text (also fallback)\n    if (opts.textFile != null || !hasOutput) {\n      let out;\n      if (opts.textFile != null && opts.textFile.length) {\n        // use superset text format when extension is `.wast`.\n        // Otherwise use official stack IR format (wat).\n        let wastFormat = opts.textFile.endsWith('.wast');\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            if (wastFormat) {\n              out = module.emitText();\n            } else {\n              out = module.emitStackIR(true);\n            }\n          } catch (e) {\n            crash(\"emitText\", e);\n          }\n        });\n        writeFile(opts.textFile, out, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            out = module.emitStackIR(true);\n          } catch (e) {\n            crash(\"emitText\", e);\n          }\n        });\n        writeStdout(out);\n      }\n    }\n\n    // Write WebIDL\n    if (opts.idlFile != null) {\n      let idl;\n      if (opts.idlFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            idl = assemblyscript.buildIDL(program);\n          } catch (e) {\n            crash(\"buildIDL\", e);\n          }\n        });\n        writeFile(opts.idlFile, __getString(idl), baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            idl = assemblyscript.buildIDL(program);\n          } catch (e) {\n            crash(\"buildIDL\", e);\n          }\n        });\n        writeStdout(__getString(idl));\n        hasStdout = true;\n      }\n    }\n\n    // Write TypeScript definition\n    if (opts.tsdFile != null) {\n      let tsd;\n      if (opts.tsdFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            tsd = assemblyscript.buildTSD(program);\n          } catch (e) {\n            crash(\"buildTSD\", e);\n          }\n        });\n        writeFile(opts.tsdFile, __getString(tsd), baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            tsd = assemblyscript.buildTSD(program);\n          } catch (e) {\n            crash(\"buildTSD\", e);\n          }\n        });\n        writeStdout(__getString(tsd));\n        hasStdout = true;\n      }\n    }\n\n    // Write JS (modifies the binary, so must be last)\n    if (opts.jsFile != null) {\n      let js;\n      if (opts.jsFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            js = module.emitAsmjs();\n          } catch (e) {\n            crash(\"emitJS\", e);\n          }\n        });\n        writeFile(opts.jsFile, js, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            js = module.emitAsmjs();\n          } catch (e) {\n            crash(\"emitJS\", e);\n          }\n        });\n        writeStdout(js);\n      }\n    }\n  }\n\n  module.dispose();\n  if (opts.measure) {\n    printStats(stats, stderr);\n  }\n\n  return callback(null);\n\n  function readFileNode(filename, baseDir) {\n    let name = path.resolve(baseDir, filename);\n    try {\n      let text;\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        text = fs.readFileSync(name, \"utf8\");\n      });\n      return text;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeFileNode(filename, contents, baseDir) {\n    try {\n      stats.writeCount++;\n      stats.writeTime += measure(() => {\n        const dirPath = path.resolve(baseDir, path.dirname(filename));\n        filename = path.basename(filename);\n        const outputFilePath = path.join(dirPath, filename);\n        if (!fs.existsSync(dirPath)) mkdirp(dirPath);\n        fs.writeFileSync(outputFilePath, contents);\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function listFilesNode(dirname, baseDir) {\n    var files;\n    try {\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        files = fs.readdirSync(path.join(baseDir, dirname))\n          .filter(file => extension.re_except_d.test(file));\n      });\n      return files;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeStdout(contents) {\n    if (!writeStdout.used) {\n      stats.writeCount++;\n      writeStdout.used = true;\n    }\n    stats.writeTime += measure(() => {\n      stdout.write(contents);\n    });\n  }\n};\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(arg) {\n  return toString.call(arg) === \"[object Object]\";\n}\n\nfunction getAsconfig(file, baseDir, readFile) {\n  const contents = readFile(file, baseDir);\n  const location = path.join(baseDir, file);\n  if (!contents) return null;\n\n  // obtain the configuration\n  let config;\n  try {\n    config = JSON.parse(contents);\n  } catch(ex) {\n    throw new Error(\"Asconfig is not valid json: \" + location);\n  }\n\n  // validate asconfig shape\n  if (config.options && !isObject(config.options)) {\n    throw new Error(\"Asconfig.options is not an object: \" + location);\n  }\n\n  if (config.include && !Array.isArray(config.include)) {\n    throw new Error(\"Asconfig.include is not an array: \" + location);\n  }\n\n  if (config.targets) {\n    if (!isObject(config.targets)) {\n      throw new Error(\"Asconfig.targets is not an object: \" + location);\n    }\n    const targets = Object.keys(config.targets);\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i];\n      if (!isObject(config.targets[target])) {\n        throw new Error(\"Asconfig.targets.\" + target + \" is not an object: \" + location);\n      }\n    }\n  }\n\n  if (config.extends && typeof config.extends !== \"string\") {\n    throw new Error(\"Asconfig.extends is not a string: \" + location);\n  }\n\n  return config;\n}\n\nexports.getAsconfig = getAsconfig;\n\n/** Checks diagnostics emitted so far for errors. */\nfunction checkDiagnostics(program, stderr, reportDiagnostic) {\n  var numErrors = 0;\n  do {\n    let diagnosticPtr = assemblyscript.nextDiagnostic(program);\n    if (!diagnosticPtr) break;\n    __pin(diagnosticPtr);\n    if (stderr) {\n      stderr.write(\n        __getString(assemblyscript.formatDiagnostic(diagnosticPtr, stderr.isTTY, true)) +\n        EOL + EOL\n      );\n    }\n    if (reportDiagnostic) {\n      const diagnostic = __wrap(diagnosticPtr, assemblyscript.DiagnosticMessage);\n      const range = __wrap(diagnostic.range, assemblyscript.Range);\n      const relatedRange = __wrap(diagnostic.relatedRange, assemblyscript.Range);\n      const rangeSource = range ? __wrap(range.source, assemblyscript.Source) : null;\n      const relatedRangeSource = relatedRange ? __wrap(relatedRange.source, assemblyscript.Source) : null;\n\n      reportDiagnostic({\n        message: __getString(diagnostic.message),\n        code: diagnostic.code,\n        category: diagnostic.category,\n        range: range ? {\n          start: range.start,\n          end: range.end,\n          source: rangeSource ? {\n            normalizedPath: __getString(rangeSource.normalizedPath)\n          } : null,\n        } : null,\n        relatedRange: relatedRange ? {\n          start: relatedRange.start,\n          end: relatedRange.end,\n          source: relatedRangeSource ? {\n            normalizedPath: __getString(relatedRangeSource.normalizedPath)\n          } : null\n        } : null\n      });\n    }\n    if (assemblyscript.isError(diagnosticPtr)) ++numErrors;\n    __unpin(diagnosticPtr);\n  } while (true);\n  return numErrors;\n}\n\nexports.checkDiagnostics = checkDiagnostics;\n\n/** Creates an empty set of stats. */\nfunction createStats() {\n  return {\n    readTime: 0,\n    readCount: 0,\n    writeTime: 0,\n    writeCount: 0,\n    parseTime: 0,\n    parseCount: 0,\n    initializeTime: 0,\n    initializeCount: 0,\n    compileTime: 0,\n    compileCount: 0,\n    emitTime: 0,\n    emitCount: 0,\n    validateTime: 0,\n    validateCount: 0,\n    optimizeTime: 0,\n    optimizeCount: 0,\n    transformTime: 0,\n    transformCount: 0\n  };\n}\n\nexports.createStats = createStats;\n\n/** Measures the execution time of the specified function.  */\nfunction measure(fn) {\n  const start = process.hrtime();\n  fn();\n  const times = process.hrtime(start);\n  return times[0] * 1e9 + times[1];\n}\n\nexports.measure = measure;\n\nfunction pad(str, len) {\n  while (str.length < len) str = \" \" + str;\n  return str;\n}\n\n/** Formats a high resolution time to a human readable string. */\nfunction formatTime(time) {\n  return time ? (time / 1e6).toFixed(3) + \" ms\" : \"n/a\";\n}\n\nexports.formatTime = formatTime;\n\n/** Formats and prints out the contents of a set of stats. */\nfunction printStats(stats, output) {\n  const format = (time, count) => pad(formatTime(time), 12) + \"  n=\" + count;\n  (output || process.stdout).write([\n    \"I/O Read   : \" + format(stats.readTime, stats.readCount),\n    \"I/O Write  : \" + format(stats.writeTime, stats.writeCount),\n    \"Parse      : \" + format(stats.parseTime, stats.parseCount),\n    \"Initialize : \" + format(stats.initializeTime, stats.initializeCount),\n    \"Compile    : \" + format(stats.compileTime, stats.compileCount),\n    \"Emit       : \" + format(stats.emitTime, stats.emitCount),\n    \"Validate   : \" + format(stats.validateTime, stats.validateCount),\n    \"Optimize   : \" + format(stats.optimizeTime, stats.optimizeCount),\n    \"Transform  : \" + format(stats.transformTime, stats.transformCount),\n    \"\"\n  ].join(EOL) + EOL);\n}\n\nexports.printStats = printStats;\n\nvar allocBuffer = typeof global !== \"undefined\" && global.Buffer\n  ? global.Buffer.allocUnsafe || (len => new global.Buffer(len))\n  : len => new Uint8Array(len);\n\n/** Creates a memory stream that can be used in place of stdout/stderr. */\nfunction createMemoryStream(fn) {\n  var stream = [];\n  stream.write = function(chunk) {\n    if (fn) fn(chunk);\n    if (typeof chunk === \"string\") {\n      let buffer = allocBuffer(utf8.length(chunk));\n      utf8.write(chunk, buffer, 0);\n      chunk = buffer;\n    }\n    this.push(chunk);\n  };\n  stream.reset = function() {\n    stream.length = 0;\n  };\n  stream.toBuffer = function() {\n    var offset = 0, i = 0, k = this.length;\n    while (i < k) offset += this[i++].length;\n    var buffer = allocBuffer(offset);\n    offset = i = 0;\n    while (i < k) {\n      buffer.set(this[i], offset);\n      offset += this[i].length;\n      ++i;\n    }\n    return buffer;\n  };\n  stream.toString = function() {\n    var buffer = this.toBuffer();\n    return utf8.read(buffer, 0, buffer.length);\n  };\n  return stream;\n}\n\nexports.createMemoryStream = createMemoryStream;\n\n/** Compatible TypeScript compiler options for syntax highlighting etc. */\nexports.tscOptions = {\n  alwaysStrict: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noEmitOnError: true,\n  strictNullChecks: true,\n  experimentalDecorators: true,\n  target: \"esnext\",\n  module: \"commonjs\",\n  noLib: true,\n  types: [],\n  allowJs: false\n};\n\n// Gracefully handle crashes\nfunction crash(stage, e) {\n  const BAR = colorsUtil.red(\"▌ \");\n  console.error([\n    EOL,\n    BAR, \"Whoops, the AssemblyScript compiler has crashed during \", stage, \" :-(\", EOL,\n    BAR, EOL,\n    BAR, \"Here is a stack trace that may or may not be useful:\", EOL,\n    BAR, EOL,\n    e.stack.replace(/^/mg, BAR), EOL,\n    BAR, EOL,\n    BAR, \"If it refers to the dist files, try to 'npm install source-map-support' and\", EOL,\n    BAR, \"run again, which should then show the actual code location in the sources.\", EOL,\n    BAR, EOL,\n    BAR, \"If you see where the error is, feel free to send us a pull request. If not,\", EOL,\n    BAR, \"please let us know: https://github.com/AssemblyScript/assemblyscript/issues\", EOL,\n    BAR, EOL,\n    BAR, \"Thank you!\", EOL\n  ].join(\"\"));\n  process.exit(1);\n}\n","module.exports = {};\n","const process = require(\"process\"); // ensure shim\n\n// https://github.com/browserify/path-browserify v1.0.1\n//\n// Copyright (c) 2013 James Halliday\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    if (from === \".\") return to; // FIX for 'odule.ts' (see issue #1398)\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = {\n  platform: \"linux\",\n  cwd() {\n    return \".\";\n  },\n  umask() {\n    return 0;\n  },\n  hrtime,\n  argv: [],\n  exit(code = 0) {\n    throw Error(`exit ${code}`);\n  }\n};\n\n// https://github.com/kumavis/browser-process-hrtime v1.0.0\n//\n// Copyright 2014 kumavis\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime(); };\n\nfunction hrtime(previousTimestamp) {\n  var clocktime = performanceNow.call(performance);\n  var seconds = Math.floor(clocktime * 1e-3);\n  var nanoseconds = Math.floor(clocktime * 1e6 - seconds * 1e9);\n  if (previousTimestamp) {\n    seconds -= previousTimestamp[0];\n    nanoseconds -= previousTimestamp[1];\n    if (nanoseconds < 0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [ seconds, nanoseconds ];\n}\n","/**\n * @fileoverview Terminal colors utility.\n * @license Apache-2.0\n */\n\nvar proc = typeof process !== \"undefined\" && process || {};\nvar isCI = proc.env && \"CI\" in proc.env; // doesn't work when bundled because 'process' is a mock\n\nfunction from(stream, base) {\n  var colors = base || {};\n  colors.supported = (stream && !!stream.isTTY) || isCI;\n  colors.gray = text => colors.supported ? exports.GRAY + text + exports.RESET : text;\n  colors.red = text => colors.supported ? exports.RED + text + exports.RESET : text;\n  colors.green = text => colors.supported ? exports.GREEN + text + exports.RESET : text;\n  colors.yellow = text => colors.supported ? exports.YELLOW + text + exports.RESET : text;\n  colors.blue = text => colors.supported ? exports.BLUE + text + exports.RESET : text;\n  colors.magenta = text => colors.supported ? exports.MAGENTA + text + exports.RESET : text;\n  colors.cyan = text => colors.supported ? exports.CYAN + text + exports.RESET : text;\n  colors.white = text => colors.supported ? exports.WHITE + text + exports.RESET : text;\n  return colors;\n}\n\nexports.stdout = from(proc.stdout, exports);\nexports.stderr = from(proc.stderr);\nexports.from = from;\n\nexports.GRAY = \"\\u001b[90m\";\nexports.RED = \"\\u001b[91m\";\nexports.GREEN = \"\\u001b[92m\";\nexports.YELLOW = \"\\u001b[93m\";\nexports.BLUE = \"\\u001b[94m\";\nexports.MAGENTA = \"\\u001b[95m\";\nexports.CYAN = \"\\u001b[96m\";\nexports.WHITE = \"\\u001b[97m\";\nexports.RESET = \"\\u001b[0m\";\n","/**\n * @fileoverview File finding utility.\n * @license Apache-2.0\n */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nfunction findFiles(dirname, filter) {\n  var out = [];\n  fs.readdirSync(dirname).forEach(name => {\n    if (fs.statSync(path.join(dirname, name)).isDirectory()) {\n      findFiles(path.join(dirname, name), filter).forEach(iname => out.push(name + \"/\" + iname));\n    } else if (!filter || typeof filter === \"function\" ? filter(name) : filter.test(name)) {\n      out.push(name);\n    }\n  });\n  return out;\n}\n\nexports.files = findFiles;\n","/**\n * @fileoverview Recursive mkdir.\n * @license\n * Copyright 2010 James Halliday (mail@substack.net)\n *\n * This project is free software released under the MIT/X11 license:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst process = require(\"process\"); // ensure shim\n\nmodule.exports = function mkdirp(p, opts, made) {\n  if (!opts || typeof opts !== \"object\") {\n    opts = { mode: opts };\n  }\n  var mode = opts.mode;\n  if (mode === undefined) {\n    mode = 0o777 & (~process.umask());\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    fs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case \"ENOENT\":\n        made = mkdirp(path.dirname(p), opts, made);\n        mkdirp(p, opts, made);\n        break;\n      default:\n        var stat;\n        try {\n          stat = fs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n  return made;\n};\n","/**\n * @fileoverview Command line options utility.\n * @license Apache-2.0\n */\n\nconst path = require(\"path\");\nconst colorsUtil = require(\"./colors\");\n\n// type | meaning\n// -----|---------------\n// b    | boolean\n// i    | integer\n// f    | float\n// s    | string\n// I    | integer array\n// F    | float array\n// S    | string array\n\n/** Parses the specified command line arguments according to the given configuration. */\nfunction parse(argv, config, propagateDefaults = true) {\n  var options = {};\n  var unknown = [];\n  var args = [];\n  var trailing = [];\n\n  // make an alias map and initialize defaults\n  var aliases = {};\n  Object.keys(config).forEach(key => {\n    if (key.startsWith(\" \")) return;\n    var option = config[key];\n    if (option.alias != null) {\n      if (typeof option.alias === \"string\") aliases[option.alias] = key;\n      else if (Array.isArray(option.alias)) option.alias.forEach(alias => aliases[alias] = key);\n    }\n    if (propagateDefaults && option.default != null) options[key] = option.default;\n  });\n\n  // iterate over argv\n  for (var i = 0, k = (argv = argv.slice()).length; i < k; ++i) {\n    let arg = argv[i];\n    if (arg == \"--\") { ++i; break; }\n    let match = /^(?:(-\\w)(?:=(.*))?|(--\\w{2,})(?:=(.*))?)$/.exec(arg), option, key;\n    if (match) {\n      if (config[arg]) option = config[key = arg]; // exact\n      else if (match[1] != null) { // alias\n        option = config[key = aliases[match[1].substring(1)]];\n        if (option && match[2] != null) argv[i--] = match[2];\n      } else if (match[3] != null) { // full\n        option = config[key = match[3].substring(2)];\n        if (option && match[4] != null) argv[i--] = match[4];\n      }\n    } else {\n      if (arg.charCodeAt(0) == 45) option = config[key = arg]; // exact\n      else { args.push(arg); continue; } // argument\n    }\n    if (option) {\n      if (option.value) {\n        // alias setting fixed values\n        Object.keys(option.value).forEach(k => options[k] = option.value[k]);\n      } else if (option.type == null || option.type === \"b\") {\n        // boolean flag not taking a value\n        options[key] = true;\n      } else {\n        if (i + 1 < argv.length && argv[i + 1].charCodeAt(0) != 45) {\n          // non-boolean with given value\n          switch (option.type) {\n            case \"i\": options[key] = parseInt(argv[++i], 10); break;\n            case \"I\": options[key] = (options[key] || []).concat(parseInt(argv[++i], 10)); break;\n            case \"f\": options[key] = parseFloat(argv[++i]); break;\n            case \"F\": options[key] = (options[key] || []).concat(parseFloat(argv[++i])); break;\n            case \"s\": options[key] = String(argv[++i]); break;\n            case \"S\": options[key] = (options[key] || []).concat(argv[++i].split(\",\")); break;\n            default: unknown.push(arg); --i;\n          }\n        } else {\n          // non-boolean with omitted value\n          switch (option.type) {\n            case \"i\":\n            case \"f\": options[key] = option.default || 0; break;\n            case \"s\": options[key] = option.default || \"\"; break;\n            case \"I\":\n            case \"F\":\n            case \"S\": options[key] = option.default || []; break;\n            default: unknown.push(arg);\n          }\n        }\n      }\n    } else unknown.push(arg);\n  }\n  while (i < k) trailing.push(argv[i++]); // trailing\n  if (propagateDefaults) addDefaults(config, options);\n\n  return { options, unknown, arguments: args, trailing };\n}\n\nexports.parse = parse;\n\n/** Generates the help text for the specified configuration. */\nfunction help(config, options) {\n  if (!options) options = {};\n  var indent = options.indent || 2;\n  var padding = options.padding || 24;\n  var eol = options.eol || \"\\n\";\n  var sbCategories = {};\n  var sbOther = [];\n  Object.keys(config).forEach(key => {\n    var option = config[key];\n    if (option.description == null) return;\n    var text = \"\";\n    while (text.length < indent) text += \" \";\n    text += \"--\" + key;\n    if (option.alias) text += \", -\" + option.alias;\n    while (text.length < padding) text += \" \";\n    var sb;\n    if (!options.noCategories && option.category) {\n      if (!(sb = sbCategories[option.category])) {\n        sbCategories[option.category] = sb = [];\n      }\n    } else {\n      sb = sbOther;\n    }\n    if (Array.isArray(option.description)) {\n      sb.push(text + option.description[0] + option.description.slice(1).map(line => {\n        for (let i = 0; i < padding; ++i) line = \" \" + line;\n        return eol + line;\n      }).join(\"\"));\n    } else sb.push(text + option.description);\n  });\n  var sb = [];\n  var hasCategories = false;\n  Object.keys(sbCategories).forEach(category => {\n    hasCategories = true;\n    sb.push(eol + \" \" + colorsUtil.gray(category) + eol);\n    sb.push(sbCategories[category].join(eol));\n  });\n  if (hasCategories) {\n    sb.push(eol + \" \" + colorsUtil.gray(\"Other\") + eol);\n  }\n  sb.push(sbOther.join(eol));\n  return sb.join(eol);\n}\n\nexports.help = help;\n\n/** Sanitizes an option value to be a valid value of the option's type. */\nfunction sanitizeValue(value, type) {\n  if (value != null) {\n    switch (type) {\n      case undefined:\n      case \"b\": return Boolean(value);\n      case \"i\": return Math.trunc(value) || 0;\n      case \"f\": return Number(value) || 0;\n      case \"s\": {\n        if (value === true) return \"\";\n        return String(value);\n      }\n      case \"I\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Math.trunc(v) || 0);\n      }\n      case \"F\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Number(v) || 0);\n      }\n      case \"S\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(String);\n      }\n    }\n  }\n  return undefined;\n}\n\n/** Merges two sets of options into one, preferring the current over the parent set. */\nfunction merge(config, currentOptions, parentOptions, parentBaseDir) {\n  const mergedOptions = {};\n  for (const [key, { type, mutuallyExclusive, isPath, useNodeResolution, cliOnly }] of Object.entries(config)) {\n    let currentValue = sanitizeValue(currentOptions[key], type);\n    let parentValue = sanitizeValue(parentOptions[key], type);\n    if (currentValue == null) {\n      if (parentValue != null) {\n        // only parent value present\n        if (cliOnly) continue;\n        if (Array.isArray(parentValue)) {\n          let exclude;\n          if (isPath) {\n            parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n          }\n          if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n            mergedOptions[key] = parentValue.filter(value => !exclude.includes(value));\n          } else {\n            mergedOptions[key] = parentValue.slice();\n          }\n        } else {\n          if (isPath) {\n            parentValue = resolvePath(parentValue, parentBaseDir, useNodeResolution);\n          }\n          mergedOptions[key] = parentValue;\n        }\n      }\n    } else if (parentValue == null) {\n      // only current value present\n      if (Array.isArray(currentValue)) {\n        mergedOptions[key] = currentValue.slice();\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    } else {\n      // both current and parent values present\n      if (Array.isArray(currentValue)) {\n        if (cliOnly) {\n          mergedOptions[key] = currentValue.slice();\n          continue;\n        }\n        let exclude;\n        if (isPath) {\n          parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n        }\n        if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value) && !exclude.includes(value))\n          ];\n        } else {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value)) // dedup\n          ];\n        }\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    }\n  }\n  return mergedOptions;\n}\n\nexports.merge = merge;\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\n/** Resolves a single possibly relative path. Keeps absolute paths, otherwise prepends baseDir. */\nfunction resolvePath(p, baseDir, useNodeResolution = false) {\n  if (path.isAbsolute(p)) return p;\n  if (useNodeResolution && !p.startsWith(\".\")) {\n    return dynrequire.resolve(p, { paths: [ baseDir ] });\n  }\n  return path.join(baseDir, p);\n}\n\nexports.resolvePath = resolvePath;\n\n/** Populates default values on a parsed options result. */\nfunction addDefaults(config, options) {\n  for (const [key, { default: defaultValue }] of Object.entries(config)) {\n    if (options[key] == null && defaultValue != null) {\n      options[key] = defaultValue;\n    }\n  }\n}\n\nexports.addDefaults = addDefaults;\n","/**\n * @fileoverview UTF8 utility.\n * @license Apache-2.0\n */\n\n// @protobufjs/utf8\n\n/**\n * A minimal UTF8 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar utf8 = exports;\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nutf8.length = function utf8_length(string) {\n  var len = 0,\n      c = 0;\n  for (var i = 0, l = string.length; i < l; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128)\n      len += 1;\n    else if (c < 2048)\n      len += 2;\n    else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i;\n      len += 4;\n    } else\n      len += 3;\n  }\n  return len;\n};\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nutf8.read = function utf8_read(buffer, start, end) {\n  var len = end - start;\n  if (len < 1)\n    return \"\";\n  var parts = null,\n      chunk = [],\n      i = 0, // char offset\n      t;     // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128)\n      chunk[i++] = t;\n    else if (t > 191 && t < 224)\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n    else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xD800 + (t >> 10);\n      chunk[i++] = 0xDC00 + (t & 1023);\n    } else\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i)\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nutf8.write = function utf8_write(string, buffer, offset) {\n  var start = offset,\n      c1, // character 1\n      c2; // character 2\n  for (var i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n};\n","// GENERATED FILE. DO NOT EDIT.\nvar loader = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.instantiate = instantiate;\n  exports.instantiateSync = instantiateSync;\n  exports.instantiateStreaming = instantiateStreaming;\n  exports.demangle = demangle;\n  exports.default = void 0;\n  // Runtime header offsets\n  const ID_OFFSET = -8;\n  const SIZE_OFFSET = -4; // Runtime ids\n  \n  const ARRAYBUFFER_ID = 0;\n  const STRING_ID = 1; // const ARRAYBUFFERVIEW_ID = 2;\n  // Runtime type information\n  \n  const ARRAYBUFFERVIEW = 1 << 0;\n  const ARRAY = 1 << 1;\n  const STATICARRAY = 1 << 2; // const SET = 1 << 3;\n  // const MAP = 1 << 4;\n  \n  const VAL_ALIGN_OFFSET = 6; // const VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\n  \n  const VAL_SIGNED = 1 << 11;\n  const VAL_FLOAT = 1 << 12; // const VAL_NULLABLE = 1 << 13;\n  \n  const VAL_MANAGED = 1 << 14; // const KEY_ALIGN_OFFSET = 15;\n  // const KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\n  // const KEY_SIGNED = 1 << 20;\n  // const KEY_FLOAT = 1 << 21;\n  // const KEY_NULLABLE = 1 << 22;\n  // const KEY_MANAGED = 1 << 23;\n  // Array(BufferView) layout\n  \n  const ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\n  const ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\n  const ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\n  const ARRAYBUFFERVIEW_SIZE = 12;\n  const ARRAY_LENGTH_OFFSET = 12;\n  const ARRAY_SIZE = 16;\n  const BIGINT = typeof BigUint64Array !== \"undefined\";\n  const THIS = Symbol();\n  const STRING_DECODE_THRESHOLD = 32;\n  const decoder = new TextDecoder(\"utf-16le\");\n  /** Gets a string from an U32 and an U16 view on a memory. */\n  \n  function getStringImpl(buffer, ptr) {\n    const len = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2] >>> 1;\n    const arr = new Uint16Array(buffer, ptr, len);\n  \n    if (len <= STRING_DECODE_THRESHOLD) {\n      return String.fromCharCode.apply(String, arr);\n    }\n  \n    return decoder.decode(arr);\n  }\n  /** Prepares the base module prior to instantiation. */\n  \n  \n  function preInstantiate(imports) {\n    const extendedExports = {};\n  \n    function getString(memory, ptr) {\n      if (!memory) return \"<yet unknown>\";\n      return getStringImpl(memory.buffer, ptr);\n    } // add common imports used by stdlib for convenience\n  \n  \n    const env = imports.env = imports.env || {};\n  \n    env.abort = env.abort || function abort(msg, file, line, colm) {\n      const memory = extendedExports.memory || env.memory; // prefer exported, otherwise try imported\n  \n      throw Error(`abort: ${getString(memory, msg)} at ${getString(memory, file)}:${line}:${colm}`);\n    };\n  \n    env.trace = env.trace || function trace(msg, n, ...args) {\n      const memory = extendedExports.memory || env.memory;\n      console.log(`trace: ${getString(memory, msg)}${n ? \" \" : \"\"}${args.slice(0, n).join(\", \")}`);\n    };\n  \n    env.seed = env.seed || Date.now;\n    imports.Math = imports.Math || Math;\n    imports.Date = imports.Date || Date;\n    return extendedExports;\n  }\n  \n  const E_NOEXPORTRUNTIME = \"Operation requires compiling with --exportRuntime\";\n  \n  const F_NOEXPORTRUNTIME = function () {\n    throw Error(E_NOEXPORTRUNTIME);\n  };\n  /** Prepares the final module once instantiation is complete. */\n  \n  \n  function postInstantiate(extendedExports, instance) {\n    const exports = instance.exports;\n    const memory = exports.memory;\n    const table = exports.table;\n  \n    const __new = exports.__new || F_NOEXPORTRUNTIME;\n  \n    const __pin = exports.__pin || F_NOEXPORTRUNTIME;\n  \n    const __unpin = exports.__unpin || F_NOEXPORTRUNTIME;\n  \n    const __collect = exports.__collect || F_NOEXPORTRUNTIME;\n  \n    const __rtti_base = exports.__rtti_base || ~0; // oob if not present\n  \n  \n    extendedExports.__new = __new;\n    extendedExports.__pin = __pin;\n    extendedExports.__unpin = __unpin;\n    extendedExports.__collect = __collect;\n    /** Gets the runtime type info for the given id. */\n  \n    function getInfo(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      const count = U32[__rtti_base >>> 2];\n      if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + id * 2];\n    }\n    /** Gets and validate runtime type info for the given id for array like objects */\n  \n  \n    function getArrayInfo(id) {\n      const info = getInfo(id);\n      if (!(info & (ARRAYBUFFERVIEW | ARRAY | STATICARRAY))) throw Error(`not an array: ${id}, flags=${info}`);\n      return info;\n    }\n    /** Gets the runtime base id for the given id. */\n  \n  \n    function getBase(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      const count = U32[__rtti_base >>> 2];\n      if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + id * 2 + 1];\n    }\n    /** Gets the runtime alignment of a collection's values. */\n  \n  \n    function getValueAlign(info) {\n      return 31 - Math.clz32(info >>> VAL_ALIGN_OFFSET & 31); // -1 if none\n    }\n    /** Gets the runtime alignment of a collection's keys. */\n    // function getKeyAlign(info) {\n    //   return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n    // }\n  \n    /** Allocates a new string in the module's memory and returns its pointer. */\n  \n  \n    function __newString(str) {\n      if (str == null) return 0;\n      const length = str.length;\n  \n      const ptr = __new(length << 1, STRING_ID);\n  \n      const U16 = new Uint16Array(memory.buffer);\n  \n      for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n  \n      return ptr;\n    }\n  \n    extendedExports.__newString = __newString;\n    /** Reads a string from the module's memory by its pointer. */\n  \n    function __getString(ptr) {\n      if (!ptr) return null;\n      const buffer = memory.buffer;\n      const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n      if (id !== STRING_ID) throw Error(`not a string: ${ptr}`);\n      return getStringImpl(buffer, ptr);\n    }\n  \n    extendedExports.__getString = __getString;\n    /** Gets the view matching the specified alignment, signedness and floatness. */\n  \n    function getView(alignLog2, signed, float) {\n      const buffer = memory.buffer;\n  \n      if (float) {\n        switch (alignLog2) {\n          case 2:\n            return new Float32Array(buffer);\n  \n          case 3:\n            return new Float64Array(buffer);\n        }\n      } else {\n        switch (alignLog2) {\n          case 0:\n            return new (signed ? Int8Array : Uint8Array)(buffer);\n  \n          case 1:\n            return new (signed ? Int16Array : Uint16Array)(buffer);\n  \n          case 2:\n            return new (signed ? Int32Array : Uint32Array)(buffer);\n  \n          case 3:\n            return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n        }\n      }\n  \n      throw Error(`unsupported align: ${alignLog2}`);\n    }\n    /** Allocates a new array in the module's memory and returns its pointer. */\n  \n  \n    function __newArray(id, values) {\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      const length = values.length;\n  \n      const buf = __new(length << align, info & STATICARRAY ? id : ARRAYBUFFER_ID);\n  \n      let result;\n  \n      if (info & STATICARRAY) {\n        result = buf;\n      } else {\n        __pin(buf);\n  \n        const arr = __new(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n  \n        __unpin(buf);\n  \n        const U32 = new Uint32Array(memory.buffer);\n        U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n        if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n        result = arr;\n      }\n  \n      const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n  \n      if (info & VAL_MANAGED) {\n        for (let i = 0; i < length; ++i) {\n          const value = values[i];\n          view[(buf >>> align) + i] = value;\n        }\n      } else {\n        view.set(values, buf >>> align);\n      }\n  \n      return result;\n    }\n  \n    extendedExports.__newArray = __newArray;\n    /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  \n    function __getArrayView(arr) {\n      const U32 = new Uint32Array(memory.buffer);\n      const id = U32[arr + ID_OFFSET >>> 2];\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      let buf = info & STATICARRAY ? arr : U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      const length = info & ARRAY ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2] : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n      return getView(align, info & VAL_SIGNED, info & VAL_FLOAT).subarray(buf >>>= align, buf + length);\n    }\n  \n    extendedExports.__getArrayView = __getArrayView;\n    /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  \n    function __getArray(arr) {\n      const input = __getArrayView(arr);\n  \n      const len = input.length;\n      const out = new Array(len);\n  \n      for (let i = 0; i < len; i++) out[i] = input[i];\n  \n      return out;\n    }\n  \n    extendedExports.__getArray = __getArray;\n    /** Copies an ArrayBuffer's value from the module's memory. */\n  \n    function __getArrayBuffer(ptr) {\n      const buffer = memory.buffer;\n      const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n      return buffer.slice(ptr, ptr + length);\n    }\n  \n    extendedExports.__getArrayBuffer = __getArrayBuffer;\n    /** Copies a typed array's values from the module's memory. */\n  \n    function getTypedArray(Type, alignLog2, ptr) {\n      return new Type(getTypedArrayView(Type, alignLog2, ptr));\n    }\n    /** Gets a live view on a typed array's values in the module's memory. */\n  \n  \n    function getTypedArrayView(Type, alignLog2, ptr) {\n      const buffer = memory.buffer;\n      const U32 = new Uint32Array(buffer);\n      const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n    }\n    /** Attach a set of get TypedArray and View functions to the exports. */\n  \n  \n    function attachTypedArrayFunctions(ctor, name, align) {\n      extendedExports[`__get${name}`] = getTypedArray.bind(null, ctor, align);\n      extendedExports[`__get${name}View`] = getTypedArrayView.bind(null, ctor, align);\n    }\n  \n    [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array].forEach(ctor => {\n      attachTypedArrayFunctions(ctor, ctor.name, 31 - Math.clz32(ctor.BYTES_PER_ELEMENT));\n    });\n  \n    if (BIGINT) {\n      [BigUint64Array, BigInt64Array].forEach(ctor => {\n        attachTypedArrayFunctions(ctor, ctor.name.slice(3), 3);\n      });\n    }\n    /** Tests whether an object is an instance of the class represented by the specified base id. */\n  \n  \n    function __instanceof(ptr, baseId) {\n      const U32 = new Uint32Array(memory.buffer);\n      let id = U32[ptr + ID_OFFSET >>> 2];\n  \n      if (id <= U32[__rtti_base >>> 2]) {\n        do {\n          if (id == baseId) return true;\n          id = getBase(id);\n        } while (id);\n      }\n  \n      return false;\n    }\n  \n    extendedExports.__instanceof = __instanceof; // Pull basic exports to extendedExports so code in preInstantiate can use them\n  \n    extendedExports.memory = extendedExports.memory || memory;\n    extendedExports.table = extendedExports.table || table; // Demangle exports and provide the usual utility on the prototype\n  \n    return demangle(exports, extendedExports);\n  }\n  \n  function isResponse(src) {\n    return typeof Response !== \"undefined\" && src instanceof Response;\n  }\n  \n  function isModule(src) {\n    return src instanceof WebAssembly.Module;\n  }\n  /** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\n  \n  \n  async function instantiate(source, imports = {}) {\n    if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n    const module = isModule(source) ? source : await WebAssembly.compile(source);\n    const extended = preInstantiate(imports);\n    const instance = await WebAssembly.instantiate(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\n  \n  \n  function instantiateSync(source, imports = {}) {\n    const module = isModule(source) ? source : new WebAssembly.Module(source);\n    const extended = preInstantiate(imports);\n    const instance = new WebAssembly.Instance(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\n  \n  \n  async function instantiateStreaming(source, imports = {}) {\n    if (!WebAssembly.instantiateStreaming) {\n      return instantiate(isResponse(source = await source) ? source.arrayBuffer() : source, imports);\n    }\n  \n    const extended = preInstantiate(imports);\n    const result = await WebAssembly.instantiateStreaming(source, imports);\n    const exports = postInstantiate(extended, result.instance);\n    return { ...result,\n      exports\n    };\n  }\n  /** Demangles an AssemblyScript module's exports to a friendly object structure. */\n  \n  \n  function demangle(exports, extendedExports = {}) {\n    const setArgumentsLength = exports[\"__argumentsLength\"] ? length => {\n      exports[\"__argumentsLength\"].value = length;\n    } : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || (() => {\n      /* nop */\n    });\n  \n    for (let internalName in exports) {\n      if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n      const elem = exports[internalName];\n      let parts = internalName.split(\".\");\n      let curr = extendedExports;\n  \n      while (parts.length > 1) {\n        let part = parts.shift();\n        if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n        curr = curr[part];\n      }\n  \n      let name = parts[0];\n      let hash = name.indexOf(\"#\");\n  \n      if (hash >= 0) {\n        const className = name.substring(0, hash);\n        const classElem = curr[className];\n  \n        if (typeof classElem === \"undefined\" || !classElem.prototype) {\n          const ctor = function (...args) {\n            return ctor.wrap(ctor.prototype.constructor(0, ...args));\n          };\n  \n          ctor.prototype = {\n            valueOf() {\n              return this[THIS];\n            }\n  \n          };\n  \n          ctor.wrap = function (thisValue) {\n            return Object.create(ctor.prototype, {\n              [THIS]: {\n                value: thisValue,\n                writable: false\n              }\n            });\n          };\n  \n          if (classElem) Object.getOwnPropertyNames(classElem).forEach(name => Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name)));\n          curr[className] = ctor;\n        }\n  \n        name = name.substring(hash + 1);\n        curr = curr[className].prototype;\n  \n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            let getter = exports[internalName.replace(\"set:\", \"get:\")];\n            let setter = exports[internalName.replace(\"get:\", \"set:\")];\n            Object.defineProperty(curr, name, {\n              get() {\n                return getter(this[THIS]);\n              },\n  \n              set(value) {\n                setter(this[THIS], value);\n              },\n  \n              enumerable: true\n            });\n          }\n        } else {\n          if (name === 'constructor') {\n            (curr[name] = (...args) => {\n              setArgumentsLength(args.length);\n              return elem(...args);\n            }).original = elem;\n          } else {\n            // instance method\n            (curr[name] = function (...args) {\n              // !\n              setArgumentsLength(args.length);\n              return elem(this[THIS], ...args);\n            }).original = elem;\n          }\n        }\n      } else {\n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            Object.defineProperty(curr, name, {\n              get: exports[internalName.replace(\"set:\", \"get:\")],\n              set: exports[internalName.replace(\"get:\", \"set:\")],\n              enumerable: true\n            });\n          }\n        } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else {\n          curr[name] = elem;\n        }\n      }\n    }\n  \n    return extendedExports;\n  }\n  \n  var _default = {\n    instantiate,\n    instantiateSync,\n    instantiateStreaming,\n    demangle\n  };\n  exports.default = _default;\n  return exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return loader; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = loader;\n","// GENERATED FILE. DO NOT EDIT.\nvar rtrace = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.Rtrace = exports.TOTAL_OVERHEAD = exports.OBJECT_OVERHEAD = exports.BLOCK_OVERHEAD = void 0;\n  // WebAssembly pages are 65536 kb\n  const PAGE_SIZE_BITS = 16;\n  const PAGE_SIZE = 1 << PAGE_SIZE_BITS;\n  const PAGE_MASK = PAGE_SIZE - 1; // Wasm32 pointer size is 4 bytes\n  \n  const PTR_SIZE_BITS = 2;\n  const PTR_SIZE = 1 << PTR_SIZE_BITS;\n  const PTR_MASK = PTR_SIZE - 1;\n  const PTR_VIEW = Uint32Array;\n  const BLOCK_OVERHEAD = PTR_SIZE;\n  exports.BLOCK_OVERHEAD = BLOCK_OVERHEAD;\n  const OBJECT_OVERHEAD = 16;\n  exports.OBJECT_OVERHEAD = OBJECT_OVERHEAD;\n  const TOTAL_OVERHEAD = BLOCK_OVERHEAD + OBJECT_OVERHEAD;\n  exports.TOTAL_OVERHEAD = TOTAL_OVERHEAD;\n  \n  function assert(x) {\n    if (!x) throw Error(\"assertion failed\");\n    return x;\n  }\n  \n  Error.stackTraceLimit = 15;\n  \n  function trimStacktrace(stack, levels) {\n    return stack.split(/\\r?\\n/).slice(1 + levels);\n  }\n  \n  const hrtime = typeof performance !== \"undefined\" && performance.now ? performance.now : typeof process !== \"undefined\" && process.hrtime ? () => {\n    let t = process.hrtime();\n    return t[0] * 1e3 + t[1] / 1e6;\n  } : Date.now;\n  const mmTagsToString = [\"\", \"FREE\", \"LEFTFREE\", \"FREE+LEFTFREE\"];\n  const gcColorToString = [\"BLACK/WHITE\", \"WHITE/BLACK\", \"GRAY\", \"INVALID\"];\n  \n  class Rtrace {\n    constructor(options) {\n      this.options = options || {};\n  \n      this.onerror = this.options.onerror || function () {\n        /* nop */\n      };\n  \n      this.oninfo = this.options.oninfo || function () {\n        /* nop */\n      };\n  \n      this.oncollect_ = this.options.oncollect || function () {\n        /* nop */\n      };\n  \n      this.memory = null;\n      this.shadow = null;\n      this.shadowStart = 0x100000000;\n      this.blocks = new Map();\n      this.allocSites = new Map();\n      this.freedBlocks = new Map();\n      this.gcProfileStart = 0;\n      this.gcProfile = [];\n      this.allocCount = 0;\n      this.resizeCount = 0;\n      this.moveCount = 0;\n      this.freeCount = 0;\n      this.heapBase = 0x100000000;\n    }\n  \n    install(imports) {\n      if (!imports) imports = {};\n      imports.rtrace = Object.assign(imports.rtrace || {}, {\n        oninit: this.oninit.bind(this),\n        onalloc: this.onalloc.bind(this),\n        onresize: this.onresize.bind(this),\n        onmove: this.onmove.bind(this),\n        onvisit: this.onvisit.bind(this),\n        onfree: this.onfree.bind(this),\n        oninterrupt: this.oninterrupt.bind(this),\n        onyield: this.onyield.bind(this),\n        oncollect: this.oncollect.bind(this),\n        onstore: this.onstore.bind(this),\n        onload: this.onload.bind(this)\n      });\n      return imports;\n    }\n    /** Synchronizes the shadow memory with the module's memory. */\n  \n  \n    syncShadow() {\n      if (!this.memory) {\n        this.memory = assert(this.options.getMemory());\n        this.shadow = new WebAssembly.Memory({\n          initial: (this.memory.buffer.byteLength + PAGE_MASK & ~PAGE_MASK) >>> PAGE_SIZE_BITS\n        });\n      } else {\n        var diff = this.memory.buffer.byteLength - this.shadow.buffer.byteLength;\n        if (diff > 0) this.shadow.grow(diff >>> 16);\n      }\n    }\n    /** Marks a block's presence in shadow memory. */\n  \n  \n    markShadow(info, oldSize = 0) {\n      assert(this.shadow && this.shadow.byteLength == this.memory.byteLength);\n      assert((info.size & PTR_MASK) == 0);\n  \n      if (info.ptr < this.shadowStart) {\n        this.shadowStart = info.ptr;\n      }\n  \n      var len = info.size >>> PTR_SIZE_BITS;\n      var view = new PTR_VIEW(this.shadow.buffer, info.ptr, len);\n      var errored = false;\n      var start = oldSize >>> PTR_SIZE_BITS;\n  \n      for (let i = 0; i < start; ++i) {\n        if (view[i] != info.ptr && !errored) {\n          this.onerror(Error(\"shadow region mismatch: \" + view[i] + \" != \" + info.ptr), info);\n          errored = true;\n        }\n      }\n  \n      errored = false;\n  \n      for (let i = start; i < len; ++i) {\n        if (view[i] != 0 && !errored) {\n          this.onerror(Error(\"shadow region already in use: \" + view[i] + \" != 0\"), info);\n          errored = true;\n        }\n  \n        view[i] = info.ptr;\n      }\n    }\n    /** Unmarks a block's presence in shadow memory. */\n  \n  \n    unmarkShadow(info, oldSize = info.size) {\n      assert(this.shadow && this.shadow.byteLength == this.memory.byteLength);\n      var len = oldSize >>> PTR_SIZE_BITS;\n      var view = new PTR_VIEW(this.shadow.buffer, info.ptr, len);\n      var errored = false;\n      var start = 0;\n  \n      if (oldSize != info.size) {\n        assert(oldSize > info.size);\n        start = info.size >>> PTR_SIZE_BITS;\n      }\n  \n      for (let i = 0; i < len; ++i) {\n        if (view[i] != info.ptr && !errored) {\n          this.onerror(Error(\"shadow region mismatch: \" + view[i] + \" != \" + info.ptr), info);\n          errored = true;\n        }\n  \n        if (i >= start) view[i] = 0;\n      }\n    }\n    /** Performs an access to shadow memory. */\n  \n  \n    accessShadow(ptr, size, isLoad, isRT) {\n      this.syncShadow();\n      if (ptr < this.shadowStart) return;\n      var value = new Uint32Array(this.shadow.buffer, ptr & ~PTR_MASK, 1)[0];\n      if (value != 0) return;\n  \n      if (!isRT) {\n        let stack = trimStacktrace(new Error().stack, 2);\n        this.onerror(new Error(\"OOB \" + (isLoad ? \"load\" : \"store\") + 8 * size + \" at address \" + ptr + \"\\n\" + stack.join(\"\\n\")));\n      }\n    }\n    /** Obtains information about a block. */\n  \n  \n    getBlockInfo(ptr) {\n      const [mmInfo, gcInfo, gcInfo2, rtId, rtSize] = new Uint32Array(this.memory.buffer, ptr, 5);\n      const size = mmInfo & ~3;\n      return {\n        ptr,\n        size: BLOCK_OVERHEAD + size,\n        // total incl. overhead\n        mmInfo: {\n          tags: mmTagsToString[mmInfo & 3],\n          size: size // as stored excl. overhead\n  \n        },\n        gcInfo: {\n          color: gcColorToString[gcInfo & 3],\n          next: gcInfo & ~3,\n          prev: gcInfo2\n        },\n        rtId,\n        rtSize\n      };\n    }\n    /** Checks if rtrace is active, i.e. at least one event has occurred. */\n  \n  \n    get active() {\n      return Boolean(this.allocCount || this.resizeCount || this.moveCount || this.freeCount);\n    }\n    /** Checks if there are any leaks and emits them via `oninfo`. Returns the number of live blocks. */\n  \n  \n    check() {\n      if (this.oninfo) {\n        for (let [ptr, info] of this.blocks) {\n          this.oninfo(\"LIVE \" + ptr + \"\\n\" + info.allocStack.join(\"\\n\"));\n        }\n      }\n  \n      return this.blocks.size;\n    } // Runtime instrumentation\n  \n  \n    oninit(heapBase) {\n      this.heapBase = heapBase;\n      this.gcProfileStart = 0;\n      this.gcProfile.length = 0;\n      this.oninfo(\"INIT heapBase=\" + heapBase);\n    }\n  \n    onalloc(ptr) {\n      this.syncShadow();\n      ++this.allocCount;\n      var info = this.getBlockInfo(ptr);\n  \n      if (this.blocks.has(ptr)) {\n        this.onerror(Error(\"duplicate alloc: \" + ptr), info);\n      } else {\n        this.oninfo(\"ALLOC \" + ptr + \"..\" + (ptr + info.size));\n        this.markShadow(info);\n        let allocStack = trimStacktrace(new Error().stack, 1); // strip onalloc\n  \n        this.blocks.set(ptr, Object.assign(info, {\n          allocStack\n        }));\n      }\n    }\n  \n    onresize(ptr, oldSize) {\n      this.syncShadow();\n      ++this.resizeCount;\n      const info = this.getBlockInfo(ptr);\n  \n      if (!this.blocks.has(ptr)) {\n        this.onerror(Error(\"orphaned resize: \" + ptr), info);\n      } else {\n        const beforeInfo = this.blocks.get(ptr);\n  \n        if (beforeInfo.size != oldSize) {\n          this.onerror(Error(`size mismatch upon resize: ${ptr} (${beforeInfo.size} != ${oldSize})`), info);\n        }\n  \n        const newSize = info.size;\n        this.oninfo(\"RESIZE \" + ptr + \"..\" + (ptr + newSize) + \" (\" + oldSize + \"->\" + newSize + \")\");\n        this.blocks.set(ptr, Object.assign(info, {\n          allocStack: beforeInfo.allocStack\n        }));\n  \n        if (newSize > oldSize) {\n          this.markShadow(info, oldSize);\n        } else if (newSize < oldSize) {\n          this.unmarkShadow(info, oldSize);\n        }\n      }\n    }\n  \n    onmove(oldPtr, newPtr) {\n      this.syncShadow();\n      ++this.moveCount;\n      var oldInfo = this.getBlockInfo(oldPtr);\n      var newInfo = this.getBlockInfo(newPtr);\n  \n      if (!this.blocks.has(oldPtr)) {\n        this.onerror(Error(\"orphaned move (old): \" + oldPtr), oldInfo);\n      } else {\n        if (!this.blocks.has(newPtr)) {\n          this.onerror(Error(\"orphaned move (new): \" + newPtr), newInfo);\n        } else {\n          const beforeInfo = this.blocks.get(oldPtr);\n          const oldSize = oldInfo.size;\n          const newSize = newInfo.size;\n  \n          if (beforeInfo.size != oldSize) {\n            this.onerror(Error(`size mismatch upon move: ${oldPtr} (${beforeInfo.size} != ${oldSize})`), oldInfo);\n          }\n  \n          this.oninfo(\"MOVE \" + oldPtr + \"..\" + (oldPtr + oldSize) + \" -> \" + newPtr + \"..\" + (newPtr + newSize)); // calls new alloc before and old free after\n        }\n      }\n    }\n  \n    onvisit(ptr) {\n      // Indicates that a block has been freed but it still visited by the GC\n      if (ptr > this.heapBase && !this.blocks.has(ptr)) {\n        let err = Error(\"orphaned visit: \" + ptr);\n        let info = this.freedBlocks.get(ptr);\n  \n        if (info) {\n          err.stack += \"\\n^ allocated at:\\n\" + info.allocStack.join(\"\\n\");\n          err.stack += \"\\n^ freed at:\\n\" + info.freeStack.join(\"\\n\");\n        }\n  \n        this.onerror(err, null);\n        return false;\n      }\n  \n      return true;\n    }\n  \n    onfree(ptr) {\n      this.syncShadow();\n      ++this.freeCount;\n      var info = this.getBlockInfo(ptr);\n  \n      if (!this.blocks.has(ptr)) {\n        this.onerror(Error(\"orphaned free: \" + ptr), info);\n      } else {\n        const oldInfo = this.blocks.get(ptr);\n  \n        if (info.size != oldInfo.size) {\n          this.onerror(Error(`size mismatch upon free: ${ptr} (${oldInfo.size} != ${info.size})`), info);\n        }\n  \n        this.oninfo(\"FREE \" + ptr + \"..\" + (ptr + info.size));\n        this.unmarkShadow(info);\n        const allocInfo = this.blocks.get(ptr);\n        this.blocks.delete(ptr);\n        const allocStack = allocInfo.allocStack;\n        const freeStack = trimStacktrace(new Error().stack, 1); // strip onfree\n        // (not much) TODO: Maintaining these is essentially a memory leak\n  \n        this.freedBlocks.set(ptr, {\n          allocStack,\n          freeStack\n        });\n      }\n    }\n  \n    oncollect(total) {\n      this.oninfo(`COLLECT at ${total}`);\n      this.plot(total);\n      this.oncollect_();\n    } // GC profiling\n  \n  \n    plot(total, pause = 0) {\n      if (!this.gcProfileStart) this.gcProfileStart = Date.now();\n      this.gcProfile.push([Date.now() - this.gcProfileStart, total, pause]);\n    }\n  \n    oninterrupt(total) {\n      this.interruptStart = hrtime();\n      this.plot(total);\n    }\n  \n    onyield(total) {\n      var pause = hrtime() - this.interruptStart;\n      if (pause >= 1) console.log(\"interrupted for \" + pause.toFixed(1) + \"ms\");\n      this.plot(total, pause);\n    } // Memory instrumentation\n  \n  \n    onstore(ptr, offset, bytes, isRT) {\n      this.accessShadow(ptr + offset, bytes, false, isRT);\n      return ptr;\n    }\n  \n    onload(ptr, offset, bytes, isRT) {\n      this.accessShadow(ptr + offset, bytes, true, isRT);\n      return ptr;\n    }\n  \n  }\n  \n  exports.Rtrace = Rtrace;\n  var _default = {\n    Rtrace\n  };\n  exports.default = _default;\n  return exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return rtrace; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = rtrace;\n","if(typeof __WEBPACK_EXTERNAL_MODULE__525__ === 'undefined') { var e = new Error(\"Cannot find module 'assemblyscript'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__525__;","module.exports = __WEBPACK_EXTERNAL_MODULE__911__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(469);\n"],"sourceRoot":""}