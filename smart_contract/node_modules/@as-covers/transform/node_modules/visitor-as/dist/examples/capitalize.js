"use strict";
const decorator_1 = require("../decorator");
class CapitalizeVisitor extends decorator_1.VariableDecorator {
    visitVariableDeclaration(node) {
        this.visit(node.initializer);
    }
    get name() {
        return "capitalize";
    }
    visitStringLiteralExpression(node) {
        const oldValue = node.value;
        node.value = node.value.toUpperCase();
        this.stdout.write(oldValue + " -> " + node.value + "\n");
    }
    visitTemplateLiteralExpression(node) {
        if (node.parts.length == 1 && node.expressions.length == 0) {
            const oldValue = node.parts[0];
            node.parts[0] = node.parts[0].toUpperCase();
            this.stdout.write(oldValue + " -> " + node.parts[0] + "\n");
        }
    }
}
module.exports = decorator_1.registerDecorator(new CapitalizeVisitor());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FwaXRhbGl6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leGFtcGxlcy9jYXBpdGFsaXplLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw0Q0FBb0U7QUFHcEUsTUFBTSxpQkFBa0IsU0FBUSw2QkFBaUI7SUFDL0Msd0JBQXdCLENBQUMsSUFBeUI7UUFDaEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sWUFBWSxDQUFDO0lBQ3RCLENBQUM7SUFFRCw0QkFBNEIsQ0FBQyxJQUE2QjtRQUN4RCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVELDhCQUE4QixDQUFDLElBQStCO1FBQzVELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBQztZQUN6RCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUM1QyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7U0FDN0Q7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxpQkFBUyw2QkFBaUIsQ0FBQyxJQUFJLGlCQUFpQixFQUFFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNsb25lTm9kZSB9IGZyb20gXCIuLi91dGlsc1wiO1xuaW1wb3J0IHsgVmFyaWFibGVEZWNvcmF0b3IsIHJlZ2lzdGVyRGVjb3JhdG9yIH0gZnJvbSBcIi4uL2RlY29yYXRvclwiO1xuaW1wb3J0IHsgU3RyaW5nTGl0ZXJhbEV4cHJlc3Npb24sIFRlbXBsYXRlTGl0ZXJhbEV4cHJlc3Npb24sIFZhcmlhYmxlRGVjbGFyYXRpb24gfSBmcm9tIFwiLi4vLi4vYXNcIjtcblxuY2xhc3MgQ2FwaXRhbGl6ZVZpc2l0b3IgZXh0ZW5kcyBWYXJpYWJsZURlY29yYXRvciB7XG4gIHZpc2l0VmFyaWFibGVEZWNsYXJhdGlvbihub2RlOiBWYXJpYWJsZURlY2xhcmF0aW9uKTogdm9pZCB7XG4gICAgdGhpcy52aXNpdChub2RlLmluaXRpYWxpemVyKTtcbiAgfVxuXG4gIGdldCBuYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwiY2FwaXRhbGl6ZVwiO1xuICB9XG5cbiAgdmlzaXRTdHJpbmdMaXRlcmFsRXhwcmVzc2lvbihub2RlOiBTdHJpbmdMaXRlcmFsRXhwcmVzc2lvbik6IHZvaWQge1xuICAgIGNvbnN0IG9sZFZhbHVlID0gbm9kZS52YWx1ZTsgXG4gICAgbm9kZS52YWx1ZSA9IG5vZGUudmFsdWUudG9VcHBlckNhc2UoKTtcbiAgICB0aGlzLnN0ZG91dC53cml0ZShvbGRWYWx1ZSArIFwiIC0+IFwiICsgbm9kZS52YWx1ZSArIFwiXFxuXCIpO1xuICB9XG4gIFxuICB2aXNpdFRlbXBsYXRlTGl0ZXJhbEV4cHJlc3Npb24obm9kZTogVGVtcGxhdGVMaXRlcmFsRXhwcmVzc2lvbik6IHZvaWQge1xuICAgIGlmIChub2RlLnBhcnRzLmxlbmd0aCA9PSAxICYmIG5vZGUuZXhwcmVzc2lvbnMubGVuZ3RoID09IDApe1xuICAgICAgY29uc3Qgb2xkVmFsdWUgPSBub2RlLnBhcnRzWzBdO1xuICAgICAgbm9kZS5wYXJ0c1swXSA9IG5vZGUucGFydHNbMF0udG9VcHBlckNhc2UoKTtcbiAgICAgIHRoaXMuc3Rkb3V0LndyaXRlKG9sZFZhbHVlICsgXCIgLT4gXCIgKyBub2RlLnBhcnRzWzBdICsgXCJcXG5cIik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCA9IHJlZ2lzdGVyRGVjb3JhdG9yKG5ldyBDYXBpdGFsaXplVmlzaXRvcigpKTtcbiJdfQ==